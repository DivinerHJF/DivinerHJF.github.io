<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>customLayout：R 语言自由拼图</title>
      <link href="/2018/11/10/customlayout-r-yu-yan-zi-you-pin-tu/"/>
      <url>/2018/11/10/customlayout-r-yu-yan-zi-you-pin-tu/</url>
      
        <content type="html"><![CDATA[<p>customLayout 包是一个图表对象布局工具，它可以让我们用更加简单易解的操作命令来完成繁琐的图片布局设置。如果你常常为了一页多图的繁琐布局设置而苦恼，那么这个包绝对值得好好学习。</p><p><img src="https://blog-1255524710.cos.ap-beijing.myqcloud.com/cover/customLayout.png" alt="customLayout"></p><p>由上图可以看到 <code>customLayout</code> 包的所有函数以及这个包的整体框架，简单来讲 <code>customLayout</code> 包就是一个图表对象布局工具，它可以让我们用更加简单易解的操作命令来完成繁琐的图片布局设置。令人惊喜的是，对于 <code>R</code> 中的 <code>base</code> 绘图对象以及 <code>grid</code> 绘图对象它都能很好地支持，同时它还支持 <code>PowerPoint</code> 对象版式的设计。</p><p>如果你常常为了一页多图的繁琐布局设置而苦恼，那么这个包绝对值得好好学习，它的学习成本很低——十分钟你就能很好的掌握，但你能得到的效益超乎想象——它能节省你大量的时间。</p><p>接下来我们就将按照封面图的流程来分别讲述每个函数的作用，我们将首先讲解图片版式，然后是 PPT 版式，最后还会提及查看当前配置的相关函数。</p><h2 id="创建并组合布局"><a href="#创建并组合布局" class="headerlink" title="创建并组合布局"></a>创建并组合布局</h2><h3 id="创建：lay-new"><a href="#创建：lay-new" class="headerlink" title="创建：lay_new()"></a>创建：lay_new()</h3><p>这个函数是后续所有命令的基础，所有的绘图命令都将以它开始，它的主要任务是创建一个 <code>custom layout</code> 对象，后续的拼接、嵌套、设置的对象都是基于这种 <code>custom layout</code> 对象。</p><pre class=" language-r"><code class="language-r">lay_new<span class="token punctuation">(</span>mat<span class="token punctuation">,</span> widths <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span> heights <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>mat：矩阵-指定每个图形的位置<br>widths：向量-指定 <code>mat</code> 中每列所代表的相对宽度<br>heights：向量-指定 <code>mat</code> 中每行所代表的相对高度</p></blockquote><ul><li>eg-创建</li></ul><pre class=" language-r"><code class="language-r">library<span class="token punctuation">(</span>customLayout<span class="token punctuation">)</span>lay <span class="token operator">&lt;-</span> lay_new<span class="token punctuation">(</span>matrix<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span> nc <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></code></pre><p><img src="https://blog-1255524710.cos.ap-beijing.myqcloud.com/images/lay_new.png" alt="lay_new.png"></p><h3 id="拼接：lay-bind-row"><a href="#拼接：lay-bind-row" class="headerlink" title="拼接：lay_bind_row()"></a>拼接：lay_bind_row()</h3><h3 id="嵌套：lay-split-field"><a href="#嵌套：lay-split-field" class="headerlink" title="嵌套：lay_split_field()"></a>嵌套：lay_split_field()</h3><hr><h2 id="预览当前布局"><a href="#预览当前布局" class="headerlink" title="预览当前布局"></a>预览当前布局</h2><h3 id="展示：lay-show"><a href="#展示：lay-show" class="headerlink" title="展示：lay_show()"></a>展示：lay_show()</h3><hr><h2 id="图片版式"><a href="#图片版式" class="headerlink" title="图片版式"></a>图片版式</h2><h3 id="基础图层：lay-set"><a href="#基础图层：lay-set" class="headerlink" title="基础图层：lay_set()"></a>基础图层：lay_set()</h3><ul><li>eg-创建</li></ul><pre class=" language-r"><code class="language-r">library<span class="token punctuation">(</span>customLayout<span class="token punctuation">)</span>set.seed<span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>par<span class="token punctuation">(</span>mar <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Prepare layout</span>lay <span class="token operator">&lt;-</span> lay_new<span class="token punctuation">(</span>matrix<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span> nc <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>widths <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>heights <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lay2 <span class="token operator">&lt;-</span> lay_new<span class="token punctuation">(</span>matrix<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>cl <span class="token operator">&lt;-</span> lay_bind_col<span class="token punctuation">(</span>lay<span class="token punctuation">,</span> lay2<span class="token punctuation">,</span> widths <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lay_set<span class="token punctuation">(</span>cl<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># initialize drawing area</span><span class="token comment" spellcheck="true"># add plots</span>plot<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">100</span> <span class="token operator">+</span> rnorm<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plot<span class="token punctuation">(</span>rnorm<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">"l"</span><span class="token punctuation">)</span>hist<span class="token punctuation">(</span>rnorm<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span>acf<span class="token punctuation">(</span>rnorm<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pie<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">)</span>pie<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">:</span><span class="token number">4</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span>pie<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">:</span><span class="token number">4</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span></code></pre><p><img src alt></p><h3 id="网格图层：lay-grid"><a href="#网格图层：lay-grid" class="headerlink" title="网格图层：lay_grid()"></a>网格图层：lay_grid()</h3><hr><h2 id="PPT-版式"><a href="#PPT-版式" class="headerlink" title="PPT 版式"></a>PPT 版式</h2><h3 id="内容设计"><a href="#内容设计" class="headerlink" title="内容设计"></a>内容设计</h3><h3 id="填充内容"><a href="#填充内容" class="headerlink" title="填充内容"></a>填充内容</h3><hr><h2 id="查看当前配置"><a href="#查看当前配置" class="headerlink" title="查看当前配置"></a>查看当前配置</h2><h3 id="图片：print-CustomLayout"><a href="#图片：print-CustomLayout" class="headerlink" title="图片：print.CustomLayout()"></a>图片：print.CustomLayout()</h3><h3 id="PPT：print-OfficerCustomLayout"><a href="#PPT：print-OfficerCustomLayout" class="headerlink" title="PPT：print.OfficerCustomLayout()"></a>PPT：print.OfficerCustomLayout()</h3><hr><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><blockquote><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://cran.r-project.org/web/packages/customLayout/customLayout.pdf" target="_blank" rel="noopener">customLayout 包官方文档</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> customLayout </tag>
            
            <tag> 绘图 </tag>
            
            <tag> 图片布局 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stargazer：R 语言输出统计表</title>
      <link href="/2018/10/30/stargazer-r-yu-yan-shu-chu-tong-ji-biao/"/>
      <url>/2018/10/30/stargazer-r-yu-yan-shu-chu-tong-ji-biao/</url>
      
        <content type="html"><![CDATA[<p>使用 stargazer 可以将 R 构建的模型结果以 LATEX 、 HTML 和 ASCII 格式输出，方便我们生成标准格式的表格结合 rmarkdown 来进行使用，会使我们优雅地写出一篇拥有期刊级统计表的文章</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>R 包 <code>stargazer</code> 可以将 <strong>数据统计汇总</strong> （格式可以为数据框、向量和矩阵等）和 <strong>统计模型结果</strong> 输出为标准统计表格式的 <code>LATEX</code> 、<code>HTML</code> 和 <code>ASCII</code> 格式的字符文本，<strong><em>将其复制到对应的软件中</em></strong> 即可生成标准的统计表，当然也可以配合 <code>rmarkdown</code> 使用直接渲染输出为表格，更加方便直接。</p><h2 id="安装及加载"><a href="#安装及加载" class="headerlink" title="安装及加载"></a>安装及加载</h2><p>可以使用常规方法导入 <code>stargazer</code> 包：</p><pre class=" language-R"><code class="language-R">install.packages("stargazer")library(stargazer)</code></pre><blockquote><p>stargazer 包的输出结果是相应格式的，例如输出 LATEX 格式，可以直接将结果粘贴进在线编辑器 <a href="https://www.overleaf.com" target="_blank" rel="noopener">Overleaf</a> 中输出表格。下文直接将结果以对应表格的形式展示。</p></blockquote><hr><h2 id="数据统计汇总"><a href="#数据统计汇总" class="headerlink" title="数据统计汇总"></a>数据统计汇总</h2><h3 id="统计汇总数据"><a href="#统计汇总数据" class="headerlink" title="统计汇总数据"></a>统计汇总数据</h3><p>如果要展示数据集的基本描述性分析数据（由 R 函数 <code>summary</code> 得到），可以使用以下命令直接得到：</p><pre class=" language-R"><code class="language-R">stargazer(attitude)</code></pre><p><img src="http://static.datartisan.com/upload/attachment/2016/12/qCOW9qcQ.png" alt="统计汇总数据"></p><h3 id="原始数据展示"><a href="#原始数据展示" class="headerlink" title="原始数据展示"></a>原始数据展示</h3><p>如果想输出某些数据框的特定行的原始内容，需要指定要查看的数据框的一部分，并将设置参数 <code>summary = FALSE</code>, 如下所示：</p><ul><li>展示 attitude 数据集前四行</li></ul><pre class=" language-R"><code class="language-R">data("attitude")stargazer(attitude[1:4,], summary = FALSE, rownames = TRUE)</code></pre><p><img src="http://static.datartisan.com/upload/attachment/2016/12/O5nnDnBH.png" alt="展示数据集"></p><p>可以看到，<code>attitude</code> 数据集中包括 <code>rating</code>、<code>complaints</code> 等多个变量，数据展示形式为 <strong>三线表</strong> 。</p><h3 id="列联表"><a href="#列联表" class="headerlink" title="列联表"></a>列联表</h3><p><code>stargazer</code> 也可以用来展示向量、矩阵或者数据框的内容。在这里我们建立了 <code>attitude</code> 数据集中变量 <code>rating</code>、<code>complaints</code>、<code>privileges</code> 的相关系数矩阵，并予以展示：</p><pre class=" language-R"><code class="language-R">correlation.matrix <- cor(attitude[,c("rating", "complaints", "privileges")])stargazer(correlation.matrix, title = "Correlation Matrix")</code></pre><p><img src="http://static.datartisan.com/upload/attachment/2016/12/cC2cR66K.png" alt="矩阵展示"></p><hr><h2 id="统计模型结果"><a href="#统计模型结果" class="headerlink" title="统计模型结果"></a>统计模型结果</h2><h3 id="回归表"><a href="#回归表" class="headerlink" title="回归表"></a>回归表</h3><p>在 R 中可以很方便的使用 <code>lm()</code> 和 <code>glm()</code> 函数来构建回归模型，我们同样可以在同一张表中对这些模型进行比较，参数 <code>title</code> 用来设定表的标题，参数 <code>align</code> 使每列中的系数沿小数点对齐：</p><pre class=" language-R"><code class="language-R">## 构建两个线性回归模型linear.1 <- lm(rating ~ complaints + privileges + learning + raises + critical,data = attitude)linear.2 <- lm(rating ~ complaints + privileges + learning, data = attitude)## 构建一个 probit 模型attitude$high.rating <- (attitude$rating > 70)probit.model <- glm(high.rating ~ learning + critical + advance, data = attitude,family = binomial(link = "probit"))stargazer(linear.1, linear.2, probit.model, title = "Results", align = TRUE)</code></pre><p><img src="http://static.datartisan.com/upload/attachment/2016/12/Cyqs7adZ.png" alt="回归表"></p><h4 id="回归表的修饰"><a href="#回归表的修饰" class="headerlink" title="回归表的修饰"></a>回归表的修饰</h4><p>为了使表格更加标准，我们还可以通过调整参数进行以下操作：</p><ul><li>删除表中的空白行：<code>no.space</code></li><li>移除不关心的统计量：<code>omit.stat</code></li><li>修改因变量和自变量的名称：<code>dep.var.labels</code> 、 <code>covariate.labels</code> </li></ul><pre class=" language-R"><code class="language-R">stargazer(linear.1, linear.2, probit.model, title = "Regression Results",align = TRUE, dep.var.labels = c("Overall Rating","High Rating"),covariate.labels = c("Handling of Complaints", "No Special Privileges","Opportunity to Learn", "Performance-Based Raises", "Too Critical","Advancement"),omit.stat = c("LL", "ser", "f"), no.space = TRUE)</code></pre><p><img src="http://static.datartisan.com/upload/attachment/2016/12/xHMLhXyR.png" alt="回归表的修饰"></p><p>本例中对原表格做了以下修改：</p><blockquote><ol><li><p>使用 <code>dep.var.labels</code> 和 <code>covariate.lables</code> 参数分别将因变量和自变量重命名为容易理解的形式；</p></li><li><p>使用 <code>omit.stat</code> 参数移除对数似然比（<code>&quot;LL&quot;</code>）、标准化残差（<code>&quot;ser&quot;</code>）和 F 统计量（<code>&quot;f&quot;</code>）；</p></li><li><p>使用<code>no.space</code>参数将输出表格中的空行删去。</p></li></ol></blockquote><h4 id="展示置信区间"><a href="#展示置信区间" class="headerlink" title="展示置信区间"></a>展示置信区间</h4><ul><li>设置是否展示置信区间：<code>ci</code></li><li>设置置信区间的置信度：<code>ci.level</code></li><li>使回归系数与置信区间并排展示：<code>single.row</code></li></ul><pre class=" language-R"><code class="language-R">stargazer(linear.1, linear.2, title = "Regression Results",dep.var.labels = c("Overall Rating", "High Rating"),covariate.labels = c("Handling of Complaints", "No Special Privileges","Opportunity to Learn", "Performance-Based Raises", "Too Critical", "Advancement"),omit.stat = c("LL","ser","f"), ci = TRUE, ci.level = 0.90, single.row = TRUE)</code></pre><p><img src="http://static.datartisan.com/upload/attachment/2016/12/rUe11IM4.png" alt="展示置信区间"></p><h4 id="其他修饰功能"><a href="#其他修饰功能" class="headerlink" title="其他修饰功能"></a>其他修饰功能</h4><blockquote><p>控制自变量展示的顺序：<code>order</code><br>控制要展示的统计量：<code>keep.stat</code> , <code>keep.stat = &quot;n&quot;</code> 即只展示样本量的大小，并移除其他统计量</p></blockquote><pre class=" language-R"><code class="language-R">stargazer(linear.1, linear.2, title = "Regression Results",dep.var.labels = c("Overall Rating", "High Rating"),order = c("learning", "privileges"),keep.stat = "n", ci = TRUE, ci.level = 0.90, single.row = TRUE)</code></pre><p><img src="http://static.datartisan.com/upload/attachment/2016/12/u0K7suc0.png" alt="其他修饰功能"></p><h4 id="控制输出格式"><a href="#控制输出格式" class="headerlink" title="控制输出格式"></a>控制输出格式</h4><p>可以使用 <code>type</code> 参数控制以 <code>ASCII</code> 、<code>text</code>、<code>html</code>、<code>latex</code> 格式输出，默认为<code>LATEX</code> 格式。</p><pre class=" language-R"><code class="language-R">stargazer(linear.1, linear.2, type = "text", title = "Regression Results",dep.var.labels = c("Overall Rating", "High Rating"),order = c("learning", "privileges"), keep.stat = "n", ci = TRUE, ci.level = 0.90, single.row = TRUE, header = F)</code></pre><p><img src="http://static.datartisan.com/upload/attachment/2016/12/gOA9wyCN.png" alt="控制输出格式"></p><h4 id="自定义统计量"><a href="#自定义统计量" class="headerlink" title="自定义统计量"></a>自定义统计量</h4><p>我们使用 <code>sandwich</code> 包来计算异方差-稳健标准误，并将其与默认计算的标准差一同展示。</p><pre class=" language-R"><code class="language-R">library(sandwich)cov <- vcovHC(linear.1, type = "HC")robust.se <- sqrt(diag(cov))stargazer(linear.1, linear.1, se = list(NULL, robust.se),column.labels = c("default", "robust"))</code></pre><p><img src="http://static.datartisan.com/upload/attachment/2016/12/PC8L8NoB.png" alt="自定义统计量"></p><h3 id="支持的模型"><a href="#支持的模型" class="headerlink" title="支持的模型"></a>支持的模型</h3><p>目前 <code>stargazer</code> 支持以下模型结果的展示：</p><blockquote><p>aftreg (eha), arima (stats), betareg (betareg), binaryChoice (sampleSelection), bj (rms), brglm (brglm), censReg (censReg), coeftest (lmtest), coxph (survival), coxreg (eha), clm (ordinal), clogit (survival), cph (rms), dynlm (dynlm), ergm(ergm), errorsarlm (spdev), felm (lfe), gam (mgcv), garchFit (fGarch), gee (gee), glm (stats), Glm (rms), glmer (lme4), glmrob(robustbase), gls (nlme), Gls (rms), gmm (gmm), heckit (sampleSelection), hetglm (glmx), hurdle (pscl), ivreg (AER), lagarlm (spdep), lm(stats), lme (nlme), lmer (lme4), lmrob (robustbase), lrm (rms), maBina (erer), mclogit (mclogit), mlogit (mlogit), mnlogit (mnlogit), mlreg (eha), multinom (nnet), nlme (nlme), nlmer (lme4), ols (rms), pgmm(plm), phreg (eha), plm (plm), pmg (plm), polr (MASS), psm (rms), rem.dyad (relevent), rlm(MASS), rq (quantreg), Rq (rms), selection (sampleSelection), svyglm (survey), survreg (survival), tobit (AER), weibreg (eha), zeroinfl (pscl), as well as from the implementation of these in zelig. In addition, stargazer also supports the following zelig models: “relogit”, “cloglog.net”, “gamma.net”, “probit.net” and “logit.net”.</p></blockquote><h3 id="支持的模板"><a href="#支持的模板" class="headerlink" title="支持的模板"></a>支持的模板</h3><p><code>style</code> 参数可以用来选择统计表的展现形式，你可以通过  <code>?stargazer</code> 查看具体参数的设置来获取具体支持的格式，目前支持的期刊统计图格式有 <code>American Economic Review</code>、 <code>Quarterly Journal of Economics</code>  等。</p><h2 id="结合-rmarkdown-使用"><a href="#结合-rmarkdown-使用" class="headerlink" title="结合 rmarkdown 使用"></a>结合 rmarkdown 使用</h2><p>代码格式:</p><pre class=" language-r"><code class="language-r">```<span class="token punctuation">{</span>r<span class="token punctuation">,</span> results<span class="token operator">=</span><span class="token string">'asis'</span><span class="token punctuation">}</span>stargazer<span class="token punctuation">(</span>model<span class="token punctuation">,</span> header <span class="token operator">=</span> F<span class="token punctuation">)</span>```</code></pre><blockquote><p><strong>注意事项：</strong></p><ul><li>要加上 <code>results=&#39;asis&#39;</code> 保证输出的是表格，而不是 LATEX 文本；</li><li>参数 <code>align</code> 失效，不能使用；</li><li>加上参数 <code>header=FALSE</code>，避免输出关于包作者的一些文本信息。</li></ul></blockquote><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><blockquote><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://cran.r-project.org/web/packages/stargazer/vignettes/stargazer.pdf" target="_blank" rel="noopener">stargazer.pdf</a></li><li>Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics<br>Tables. R package version 5.2.2. <a href="https://CRAN.R-project.org/package=stargazer" target="_blank" rel="noopener">https://CRAN.R-project.org/package=stargazer</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> 可视化 </tag>
            
            <tag> stargazer </tag>
            
            <tag> 统计表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R Markdown: 数据报告生成利器</title>
      <link href="/2018/07/09/r-markdown-shu-ju-bao-gao-sheng-cheng-li-qi/"/>
      <url>/2018/07/09/r-markdown-shu-ju-bao-gao-sheng-cheng-li-qi/</url>
      
        <content type="html"><![CDATA[<p>R Markdown 站在 knitr 和 Pandoc 的肩膀上，前者执行嵌入于文档中的计算机代码，并将 R Markdown 转换为 Markdown；后者将 Markdown 呈现出您想要的输出格式（如 PDF、HTML、Word 等）</p><p>此篇文章翻译自谢益辉新书 <a href="https://bookdown.org/yihui/rmarkdown/" target="_blank" rel="noopener">《R Markdown: The Definitive Guide》</a> 的前三章节，内容有所删减，主要介绍了 R Markdown 的相关结构及语法规则，如果想了解更多更详细的内容推荐您阅读原书。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>这里假设您已经安装了 R (<a href="https://www.r-project.org/" target="_blank" rel="noopener">https://www.r-project.org</a>)  和 RStudio IDE (<a href="https://www.rstudio.com/" target="_blank" rel="noopener">https://www.rstudio.com</a>) 。Rstudio 并不是必须的，但安装它会使您更加容易地使用 R Markdown。如果您没有安装 RStudio IDE，您将不得不安装 Pandoc（ <a href="http://pandoc.org" target="_blank" rel="noopener">http://pandoc.org</a> ），否则就不需要单独安装 Pandoc，因为在安装 RStudio 时已经将它捆绑安装了。接下来，您可以在 R 中安装 <code>rmarkdown</code> 包： </p><pre class=" language-R"><code class="language-R"># Install from CRANinstall.packages('rmarkdown')# Or if you want to test the development version,# install from GitHubif (!requireNamespace("devtools"))  install.packages('devtools')devtools::install_github('rstudio/rmarkdown')</code></pre><p>如果您想要生成 PDF 类型文档输出，您将需要安装 LaTeX 。对于那些以前没有安装过 LaTeX 的 R Markdown 用户，我们建议您安装 TinyTeX（<a href="https://yihui./tinytex/）：" target="_blank" rel="noopener">https://yihui./tinytex/）：</a> </p><pre class=" language-R"><code class="language-R">install.packages("tinytex")tinytex::install_tinytex()  # install TinyTeX</code></pre><p>TinyTeX 相当于一款轻量级、跨平台、易于维护的 LaTeX 。在将 LaTeX  或 R Markdown 文档编译成 PDF 时，<code>tinytex</code> 可以帮助您自动安装所需的相关 R 包，同时还能确保一个 LaTeX  文档被编译成正确的次数，以解决所有的交叉引用问题。如果您不明白这两件事是什么意思，应该按照我们的建议来安装 TinyTeX，因为这些细节往往并不值得您花费时间和精力去关心。 </p><p>使用 <code>rmarkdown</code> 包、RStudio/Pandoc 和 LaTeX，您应该能够编译大多数R Markdown 文档。在某些情况下，您可能需要其他软件包，我们将在必要时提到它们。 </p><blockquote><p><strong>参考文献</strong></p><ul><li>R Core Team. 2018. <em>R: A Language and Environment for Statistical Computing</em>. Vienna, Austria: R Foundation for Statistical Computing. <a href="https://www.r-project.org/" target="_blank" rel="noopener">https://www.R-project.org/</a>.</li><li>Xie, Yihui. 2018f. <em>Tinytex: Helper Functions to Install and Maintain Tex Live, and Compile Latex Documents</em>. <a href="https://github.com/yihui/tinytex" target="_blank" rel="noopener">https://github.com/yihui/tinytex</a>.</li></ul></blockquote><hr><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>R Markdown 为数据科学提供了一个创作框架。R Markdown 能胜任以下两个任务：</p><ul><li>保存并执行代码；</li><li>生成可共享的高质量报告。</li></ul><p>R Markdown 的设计初衷是为了更容易地实现报告内容的可重复性，这是因为计算代码和叙述都在同一个文档中，结果是由源代码自动生成的。并且 R Markdown 支持数十种静态和动态/交互式输出格式。 </p><p>如果您更喜欢观看视频进行学习，我们建议您查看网站 <a href="https://rmarkdown.rstudio.com" target="_blank" rel="noopener">https://rmarkdown.rstudio.com</a>，并在 “Get Started ” 中观看视频，其中包括了 R Markdown 的基础知识。 </p><h2 id="文档结构"><a href="#文档结构" class="headerlink" title="文档结构"></a>文档结构</h2><p>下面是一份非常简易的 R Markdown 文档，是一个带有 <code>.Rmd</code> 拓展名的纯文本文档。</p><ul><li>YAML 元数据</li></ul><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Hello R Markdown"</span><span class="token key atrule">author</span><span class="token punctuation">:</span> <span class="token string">"Awesome Me"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token string">"2018-02-14"</span><span class="token key atrule">output</span><span class="token punctuation">:</span> html_document<span class="token punctuation">---</span></code></pre><pre class=" language-markdown"><code class="language-markdown">This is a paragraph in an R Markdown document.Below is a code chunk:```{r}fit = lm(dist ~ speed, data = cars)b   = coef(fit)plot(cars)abline(fit)```The slope of the regression is <span class="token code keyword">`r b[1]`</span>.```</code></pre><p>您可以使用任何文本编辑器（包括但不限于 RStudio）来创建这样的文本文档。如果使用 RStudio，您可以从 <code>File -&gt; New File -&gt; R Markdown</code> 中创建一个新的 Rmd 文档。 </p><p>一份 R Markdown 文档有三个基础组成部分：元数据，文本和代码。元数据是在三个连接符 <code>---</code> 之间的内容。元数据的语法是 YAML（ <a href="https://en.wikipedia.org/wiki/YAML" target="_blank" rel="noopener">YAML 不是标记语言</a> ），所以有时它也被称为 YAML metadata 或 YAML frontmatter。 需要注意的是，缩进在 YAML 中十分重要，忽视它会让你付出惨重代价。请参阅谢益辉所写的 《bookdown》（2016）一书中的 <a href="https://bookdown.org/yihui/bookdown/r-markdown.html" target="_blank" rel="noopener">附录b.2</a> 来了解一些简单的例子，这些示例展示了 YAML 语法。</p><p>文档的主体遵循元数据书写的规则。文本的语法是 Markdown，将在第 2.5 节中进行介绍。有两种类型的计算机代码，在第 2.6 节中进行了详细解释： </p><ul><li><strong>代码块</strong>：以三个重音符及所使用语言开始，其中 <code>r</code> 代表所使用的程序语言，并以三个重音符结束。 可以在花括号中填写块选项（如：将图形高度设置为5英寸：<code>{r, fig.height=5}</code>）。</li><li><strong>内联代码</strong>：以 <code></code>r` 开始，并以单个重音符结束。</li></ul><h2 id="文档编译"><a href="#文档编译" class="headerlink" title="文档编译"></a>文档编译</h2><p>最简单的方式莫过于在 RStudio 中单击 <code>Knit</code> 按钮，对应的快捷键为 <code>Ctrl + Shift + K</code> （在 macOS 中为 <code>Cmd + Shift + K</code>）。当然也可以直接运行代码 <code>rmarkdown::render</code> 来进行渲染编译，如：</p><pre class=" language-R"><code class="language-R">rmarkdown::render('foo.Rmd', 'pdf_document')</code></pre><p>当编译多个文档时，使用函数更加方便，因为可以直接使用循环来进行渲染编译。</p><h2 id="参考卡片"><a href="#参考卡片" class="headerlink" title="参考卡片"></a>参考卡片</h2><p>RStudio 已经创建了大量的参考卡片，它们可以在 <a href="https://www.rstudio.com/resources/cheatsheets/" target="_blank" rel="noopener">https://www.rstudio.com/resources/cheatsheets/</a> 上免费获得。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>有两种输出格式：documents 和 presentations 。所有可用的格式如下所示 ：</p><ul><li><code>beamer_presentation</code></li><li><code>github_document</code></li><li><code>html_document</code></li><li><code>ioslides_presentation</code></li><li><code>latex_document</code></li><li><code>md_document</code></li><li><code>odt_document</code></li><li><code>pdf_document</code></li><li><code>powerpoint_presentation</code></li><li><code>rtf_document</code></li><li><code>slidy_presentation</code></li><li><code>word_document</code></li></ul><p>我们将在第 3 章和第 4 章详细地记录这些输出格式。在其他扩展包中提供了更多的输出格式（从第 5 章开始）。对于 Rmd 文件的 YAML 元数据中的输出格式名称，如果格式来自扩展包，您需要包含包名（若格式来自于 <code>rmarkdown</code> 包，则不需要 <code>rmarkdown::</code>前缀 ），例如：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">output</span><span class="token punctuation">:</span> tufte<span class="token punctuation">:</span><span class="token punctuation">:</span>tufte_html</code></pre><p>每种输出格式通常都有多种格式选项。所有这些选项都记录在 R 包 help 页面上。例如，您可以在 R 中键入 <code>?rmarkdown::</code> 打开关于 <code>html_document</code> 格式的 help 页面。当您想要使用某些选项时，必须将这些值从 R 转换成 YAML，例如：</p><pre class=" language-R"><code class="language-R">html_document(toc = TRUE, toc_depth = 2, dev = 'svg')</code></pre><p>可以用 YAML 写为： </p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token key atrule">html_document</span><span class="token punctuation">:</span>    <span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">toc_depth</span><span class="token punctuation">:</span> <span class="token number">2</span>    <span class="token key atrule">dev</span><span class="token punctuation">:</span> <span class="token string">'svg'</span></code></pre><p>YAML 中的字符串通常不需要引号（<code></code>dev：“svg”<code>和</code>dev:svg<code>是相同的），除非它们包含特殊字符，比如冒号</code>：<code>。如果您不确定是否应该引用字符串，那么用</code>yaml` 包来测试它，例如：</p><pre class=" language-R"><code class="language-R">cat(yaml::as.yaml(list(  title = 'A Wonderful Day',  subtitle = 'hygge: a quality of coziness')))## title: A Wonderful Day## subtitle: 'hygge: a quality of coziness'</code></pre><p>注意，上面例子中的副标题是由于冒号而引用单引号的。</p><p>如果某一选项有子选项（这意味着该选项的值是 R 中的列表），则子选项需要进一步缩进，例如：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token key atrule">html_document</span><span class="token punctuation">:</span>    <span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">includes</span><span class="token punctuation">:</span>      <span class="token key atrule">in_header</span><span class="token punctuation">:</span> header.html      <span class="token key atrule">before_body</span><span class="token punctuation">:</span> before.html</code></pre><p>一些选项将被传递给 <strong>knitr</strong> ，比如 <code>dev</code>、<code>fig_width</code> 和 <code>fig_height</code>。这些选项的详细文档可以在 <a href="https://yihui.name/knitr/options/" target="_blank" rel="noopener">knitr 文档页面</a> 上找到。请注意，实际的 knitr 选项名称可能有所不同。特别是，knitr 在名称中使用 <code>.</code>，但 rmarkdown 使用 <code>_</code>，例如，在 rmarkdown 中，<code>fig_width</code>  对应于knitr 中的 <code>fig.width</code> 。</p><p>一些选项将被传递给 <strong>Pandoc</strong>，比如 <code>toc</code>、<code>toc_depth</code> 和 <code>number_sections</code> 。当有疑问时，您应该参考 Pandoc 文档。R Markdown 输出格式函数通常有一个<code>pandoc_args</code>  参数，它应该是传递给 Pandoc 的参数的字符向量。如果您发现任何没有由输出格式参数表示的 Pandoc 特性，您可以使用这个终极论证，例如：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token key atrule">pdf_document</span><span class="token punctuation">:</span>    <span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">pandoc_args</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"--wrap=none"</span><span class="token punctuation">,</span> <span class="token string">"--top-level-division=chapter"</span><span class="token punctuation">]</span></code></pre><h2 id="Markdown-语法"><a href="#Markdown-语法" class="headerlink" title="Markdown 语法"></a>Markdown 语法</h2><h3 id="内联格式"><a href="#内联格式" class="headerlink" title="内联格式"></a>内联格式</h3><ul><li><p><em>斜体</em> ：<code>_text_</code> 或 <code>*text*</code> </p></li><li><p><strong>粗体</strong> ：<code>**text**</code></p></li><li><p>下标 ：<code>H~3~PO~4~</code>  渲染为 $H_3PO_4$ </p></li><li><p>上标 ：<code>Cu^2+^</code>  渲染为 $Cu^{2+}$ </p></li><li><p>脚注 ： <code>^[This is a footnote.]</code> </p></li><li><p>内联代码 ：<code>`code`</code> , 可以使用 n+1 个重音符输出包含 n 个重音符的代码块。</p></li><li><p>超链接 ：<code>[text](link)</code> </p></li><li><p>图片链接 ： <code>![alt text or image title](path/to/image)</code></p></li><li><p>引用 ： </p><pre class=" language-ruby"><code class="language-ruby"><span class="token variable">@Manual</span><span class="token punctuation">{</span><span class="token constant">R</span><span class="token operator">-</span>base<span class="token punctuation">,</span>  title <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token constant">R</span><span class="token punctuation">:</span> <span class="token constant">A</span> <span class="token constant">Language</span> <span class="token keyword">and</span> <span class="token constant">Environment</span> <span class="token keyword">for</span> <span class="token constant">Statistical</span>    <span class="token constant">Computing</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  author <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token constant">R</span> <span class="token constant">Core</span> <span class="token constant">Team</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  organization <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token constant">R</span> <span class="token constant">Foundation</span> <span class="token keyword">for</span> <span class="token constant">Statistical</span> <span class="token constant">Computing</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  address <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token constant">Vienna</span><span class="token punctuation">,</span> <span class="token constant">Austria</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  year <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2017</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  url <span class="token operator">=</span> <span class="token punctuation">{</span>https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span><span class="token constant">R</span><span class="token operator">-</span>project<span class="token punctuation">.</span>org<span class="token operator">/</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span></code></pre></li></ul><h3 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h3><ul><li><p><strong>标题</strong></p><pre class=" language-Markdown"><code class="language-Markdown"># First-level header## Second-level header### Third-level header</code></pre><p>如果不想让某个标题被编号，可以在标题后面添加 <code>{-}</code> 或者 <code>{.unnumbered}</code>，如：</p><pre class=" language-Markdown"><code class="language-Markdown"># Preface {-} </code></pre></li><li><p><strong>无序列表</strong></p><pre class=" language-Markdown"><code class="language-Markdown">- one item- one item- one item  - one more item  - one more item  - one more item</code></pre></li><li><p><strong>有序列表</strong></p><pre class=" language-Markdown"><code class="language-Markdown">1. the first item2. the second item3. the third item  - one unordered item  - one unordered item</code></pre></li><li><p><strong>引用</strong></p><pre class=" language-Markdown"><code class="language-Markdown">> "I thoroughly disapprove of duels. If a man should challenge me,  I would take him kindly and forgivingly by the hand and lead him  to a quiet place and kill him.">>                                                 --- Mark Twain</code></pre><blockquote><p>“I thoroughly disapprove of duels. If a man should challenge me,<br>I would take him kindly and forgivingly by the hand and lead him<br>to a quiet place and kill him.”</p><p>​                                               — Mark Twain</p></blockquote></li><li><p><strong>代码块</strong></p><pre class=" language-Markdown"><code class="language-Markdown">```This text is displayed verbatim / preformatted```Or indent by four spaces:    This text is displayed verbatim / preformatted</code></pre></li></ul><h3 id="数学表达式"><a href="#数学表达式" class="headerlink" title="数学表达式"></a>数学表达式</h3><p><code>$f(k) = {n \choose k} p^{k} (1-p)^{n-k}$</code> :  $f(k) = {n \choose k} p^{k} (1-p)^{n-k}$ </p><p><code>$$f(k) = {n \choose k} p^{k} (1-p)^{n-k}$$</code> : </p><p>$$<br>f(k) = {n \choose k} p^{k} (1-p)^{n-k}<br>$$</p><hr><h2 id="代码块选项"><a href="#代码块选项" class="headerlink" title="代码块选项"></a>代码块选项</h2><p>单击 <code>Insert</code> 按钮，对应快捷键为 <code>Ctrl + Alt + I</code> （macOS：<code>Cmd + Option + I</code> ）。</p><p>在 <a href="https://yihui.name/knitr/options" target="_blank" rel="noopener">https://yihui.name/knitr/options</a> 中有大量的代码块可选项，在此我们列出常用的一部分：</p><ul><li><p><code>eval=TRUE</code> ：执行当前代码块；</p><pre class=" language-R"><code class="language-R">```{r}# execute code if the date is later than a specified daydo_it = Sys.Date() > '2018-02-14'``````{r, eval=do_it}x = rnorm(100)```</code></pre></li><li><p><code>echo=TRUE</code> ：输出源代码；</p></li><li><p><code>result</code> ：当设置为 <code>&#39;hide&#39;</code> ，文本输出将被隐藏；当设置为 <code>&#39;asis&#39;</code> ，文本输出将被 “原样” 书写。</p></li><li><p><code>collapse=TRUE</code> ：将文本输出和源代码合并为单个代码块输出，更加紧凑；</p></li><li><p><code>warning</code>, <code>message</code>,  <code>error</code> ：是否在输出文档中显示警告、消息和错误；</p></li><li><p><code>include=FALSE</code> ：运行当前代码并且不显示任何源代码与输出结果；</p></li><li><p><code>cache</code> ：是否启用高速缓存。如果启用了缓存，则在下一次编译文档时不会对相同的代码块进行评估（如果代码块没有被修改），这将节省您的时间；</p></li><li><p><code>fig.width</code>，<code>fig.height</code> ：（图形设备）块的大小（英寸）。注意：<code>fig.dim = c(6, 4)</code> 意味着 <code>fig.width = 6</code> 并且 <code>fig.height = 4</code>；</p></li><li><p><code>out.width</code>， <code>out.height</code> ：输出文档中 R 图片的输出大小。可以使用百分比，例如 <code>out.width = &#39;80%&#39;</code> 表示页面宽度的 80%； </p></li><li><p><code>fig.align</code> ：图片的对齐方式；</p></li><li><p><code>dev</code> ：图形设备保存 R 图片的格式。如 <code>&#39;pdf&#39;</code>, <code>&#39;png&#39;</code>, <code>&#39;svg&#39;</code>, <code>&#39;jpeg&#39;</code>；</p></li><li><p><code>fig.cap</code> ：图片标题；</p></li><li><p><code>child</code> ：您可以在主文档中包含子文档。这个选项选择一条通向外部文件的路径。 </p></li></ul><p>如果某个选项需要经常被设置为多个代码块中的值，您可以考虑在文档的第一个代码块中全局设置它：</p><pre class=" language-R"><code class="language-R">```{r, setup, include=FALSE}knitr::opts_chunk$set(fig.width = 8, collapse = TRUE)```</code></pre><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>本地图片亦可以使用代码块选项进行调节，例如：</p><pre class=" language-R"><code class="language-R">```{r, out.width='25%', fig.align='center', fig.cap='...'}knitr::include_graphics('images/hex-rmarkdown.png')```</code></pre><p>如果您想要淡入一个不是由 R 代码生成的图形，您可以使用 <code>knitr::include_graphics()</code>  函数，它使您能够更好地控制图像的属性，而不是像 <code>![alt text or image title](path/to/image)</code> 这样的 Markdown 语法难以调解图片属性。 </p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>使用 <code>knitr::kable()</code>  函数可以简易的创建表格，表格标题可以通过 <code>caption</code>  来设置，例如：</p><pre class=" language-R"><code class="language-R">```{r tables-mtcars}knitr::kable(iris[1:5, ], caption = 'A caption')```</code></pre><p>如果您正在寻找更高级的表格样式控制，建议您使用 <a href="https://cran.r-project.org/package=kableExtra" target="_blank" rel="noopener">kableExtra</a> 包，它提供了定制 PDF 和 HTML 表格外观的功能。在第 12.3 节中解释了 <code>bookdown</code> 包如何扩展 rmarkdown 的功能，以允许在文本中轻松地交叉引用数字和表格。 </p><blockquote><p><strong>参考文献</strong></p><ul><li>Xie, Yihui. 2015. <em>Dynamic Documents with R and Knitr</em>. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. <a href="https://yihui.name/knitr/" target="_blank" rel="noopener">https://yihui.name/knitr/</a>. </li></ul></blockquote><hr><h1 id="输出文档"><a href="#输出文档" class="headerlink" title="输出文档"></a>输出文档</h1><h2 id="HTML-文档"><a href="#HTML-文档" class="headerlink" title="HTML 文档"></a>HTML 文档</h2><p>为了输出 HTML 文档，首先要在 YAML 元数据中写入 <code>output: html_document</code> ：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> Habits<span class="token key atrule">author</span><span class="token punctuation">:</span> John Doe<span class="token key atrule">date</span><span class="token punctuation">:</span> March 22<span class="token punctuation">,</span> <span class="token number">2005</span><span class="token key atrule">output</span><span class="token punctuation">:</span> html_document<span class="token punctuation">---</span></code></pre><h3 id="目录（Table-of-contents）"><a href="#目录（Table-of-contents）" class="headerlink" title="目录（Table of contents）"></a>目录（Table of contents）</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Habits"</span><span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token key atrule">html_document</span><span class="token punctuation">:</span>    <span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">toc_depth</span><span class="token punctuation">:</span> <span class="token number">2</span>    <span class="token key atrule">toc_float</span><span class="token punctuation">:</span>        <span class="token key atrule">collapsed</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>        <span class="token key atrule">smooth_scroll</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token punctuation">---</span></code></pre><ul><li><code>toc: true</code> ：输出目录；</li><li><code>toc_depth</code> ：所输出标题的最小级别；</li><li><code>toc_float: true</code> ：目录悬停于内容左侧，并一直可见；</li><li><code>collapsed</code> (默认为 <code>TRUE</code>)  ：初始只显示顶级标题，随内容滚动目录逐级展开；</li><li><code>smooth_scroll</code> (默认为 <code>TRUE</code>) ：点击目录标题是否导航到指定内容。</li></ul><h3 id="目录编号-Section-numbering"><a href="#目录编号-Section-numbering" class="headerlink" title="目录编号 (Section numbering)"></a>目录编号 (Section numbering)</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Habits"</span><span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token key atrule">html_document</span><span class="token punctuation">:</span>    <span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">number_sections</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token punctuation">---</span></code></pre><p>注意，如果文档中没有一级标题，那么二级标题将被命名为 <code>0.1</code>, <code>0.2</code> ……</p><h3 id="选项卡-Tabbed-sections"><a href="#选项卡-Tabbed-sections" class="headerlink" title="选项卡 (Tabbed sections)"></a>选项卡 (Tabbed sections)</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">##</span> Quarterly Results {.tabset .tabset-fade .tabset-pills}</span><span class="token title important"><span class="token punctuation">###</span> By Product</span>(tab content)<span class="token title important"><span class="token punctuation">###</span> By Region</span>(tab content)</code></pre><p><img src="https://bookdown.org/yihui/rmarkdown/images/tabset.png" alt="Tabbed sections"></p><ul><li><code>.tabset</code>  ：使主标题的所有子标题与 .tabset 属性一起出现在选项卡中，而不是作为独立的部分；</li><li><code>.tabset-fade</code>  ：选项卡切换时淡入淡出；</li><li><code>.tabset-pills</code>  ：改变选项卡外观，使其类似 “药丸”。</li></ul><h3 id="外观与风格"><a href="#外观与风格" class="headerlink" title="外观与风格"></a>外观与风格</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Habits"</span><span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token key atrule">html_document</span><span class="token punctuation">:</span>    <span class="token key atrule">theme</span><span class="token punctuation">:</span> united    <span class="token key atrule">highlight</span><span class="token punctuation">:</span> tango<span class="token punctuation">---</span></code></pre><ul><li><code>theme</code>  ：主题是从 <a href="https://bootswatch.com/3/" target="_blank" rel="noopener">Bootswatch</a> 主题库中提取的，适用的主题包括：<code>default</code>, <code>cerulean</code>, <code>journal</code>, <code>flatly</code>, <code>readable</code>, <code>spacelab</code>, <code>united</code>, <code>cosmo</code>, <code>lumen</code>, <code>paper</code>, <code>sandstone</code>, <code>simplex</code>, 和 <code>yeti</code>. </li><li><code>highlight</code> ：代码高亮模式。支持的风格包括： <code>default</code>,  <code>tango</code>,  <code>pygments</code>,  <code>kate</code>,  <code>monochrome</code>,  <code>espresso</code>,  <code>zenburn</code>,  <code>haddock</code> 和 <code>textmate</code>.  </li></ul><h3 id="图片选项"><a href="#图片选项" class="headerlink" title="图片选项"></a>图片选项</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Habits"</span><span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token key atrule">html_document</span><span class="token punctuation">:</span>    <span class="token key atrule">fig_width</span><span class="token punctuation">:</span> <span class="token number">7</span>    <span class="token key atrule">fig_height</span><span class="token punctuation">:</span> <span class="token number">6</span>    <span class="token key atrule">fig_caption</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token punctuation">---</span></code></pre><ul><li><code>fig_width</code> 和 <code>fig_height</code>  ：图片宽度和高度；</li><li><code>fig_caption</code>  ：控制图片是否包括标题；</li><li><code>dev</code>  ：图片渲染格式，默认为 <code>png</code>。</li></ul><h3 id="表格打印"><a href="#表格打印" class="headerlink" title="表格打印"></a>表格打印</h3><p> 默认表格输出格式为：</p><table><thead><tr><th style="text-align:center">Option</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:center">default</td><td style="text-align:left">Call the <code>print.data.frame</code> generic method</td></tr><tr><td style="text-align:center">kable</td><td style="text-align:left">Use the <code>knitr::kable</code> function</td></tr><tr><td style="text-align:center">tibble</td><td style="text-align:left">Use the <code>tibble::print.tbl_df</code> function</td></tr><tr><td style="text-align:center">paged</td><td style="text-align:left">Use <code>rmarkdown::print.paged_df</code> to create a pageable table</td></tr></tbody></table><p>设定为 paged 格式后输出形式为：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Motor Trend Car Road Tests"</span><span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token key atrule">html_document</span><span class="token punctuation">:</span>    <span class="token key atrule">df_print</span><span class="token punctuation">:</span> paged<span class="token punctuation">---</span>​``` <span class="token punctuation">{</span>r<span class="token punctuation">,</span> rows.print=5<span class="token punctuation">}</span>mtcars​</code></pre><pre><code>![mtcars](https://bookdown.org/yihui/rmarkdown/images/paged.png)TABLE 3.2: The options for paged HTML tables. | Option         | Description                                           || -------------- | ----------------------------------------------------- || max.print      | The number of rows to print.                          || max.print      | The number of rows to print.                          || cols.print     | The number of columns to display.                     || cols.min.print | The minimum number of columns to display.             || pages.print    | The number of pages to display under page navigation. || pages.print    | The number of pages to display under page navigation. || rownames.print | When set to `FALSE` turns off row names.              |### 代码折叠```yaml---title: &quot;Habits&quot;output:  html_document:    code_folding: hide---</code></pre><ul><li><code>code_folding: hide</code> ：初始默认不显示代码，查看者可点击进行显示；</li><li><code>code_folding: show</code> ：初始默认显示代码，查看者可点击进行隐藏；</li></ul><h3 id="高级定制"><a href="#高级定制" class="headerlink" title="高级定制"></a>高级定制</h3><h4 id="保留-Markdown-文件"><a href="#保留-Markdown-文件" class="headerlink" title="保留 Markdown 文件"></a>保留 Markdown 文件</h4><p>当运行一个 R Markdown 文件（<code>*.Rmd</code>）时，将创造一个 Markdown 文件（<code>*.md</code>）并将该文件通过 Pandoc 转换为 HTML 文件。如果想要保留 Markdown 文件，可以使用 <code>keep_md</code> 选项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Habits"</span><span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token key atrule">html_document</span><span class="token punctuation">:</span>    <span class="token key atrule">keep_md</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token punctuation">---</span></code></pre><h4 id="添加本地-HTML-文档"><a href="#添加本地-HTML-文档" class="headerlink" title="添加本地 HTML 文档"></a>添加本地 HTML 文档</h4><p>可以通过添加额外的 HTML 内容或完全替换核心 Pandoc 模板来完成更高级的输出定制。为了在文档头部或文档主体之前/之后包含内容，您可以使用以下选项： </p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Habits"</span><span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token key atrule">html_document</span><span class="token punctuation">:</span>    <span class="token key atrule">includes</span><span class="token punctuation">:</span>      <span class="token key atrule">in_header</span><span class="token punctuation">:</span> header.html      <span class="token key atrule">before_body</span><span class="token punctuation">:</span> doc_prefix.html      <span class="token key atrule">after_body</span><span class="token punctuation">:</span> doc_suffix.html<span class="token punctuation">---</span></code></pre><h4 id="自定义模板"><a href="#自定义模板" class="headerlink" title="自定义模板"></a>自定义模板</h4><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Habits"</span><span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token key atrule">html_document</span><span class="token punctuation">:</span>    <span class="token key atrule">template</span><span class="token punctuation">:</span> quarterly_report.html<span class="token punctuation">---</span></code></pre><p>有关模板的其他详细信息，请参考 <a href="http://pandoc.org/MANUAL.html#templates" target="_blank" rel="noopener">Pandoc 模板</a> 上的文档。您还可以研究默认的 HTML 模板 <a href="https://github.com/jgm/pandoc-templates/" target="_blank" rel="noopener"><code>default.html5</code></a> 。</p><p>其他类型文档格式控制方式类似，如欲详细了解请 <a href="https://bookdown.org/yihui/rmarkdown/documents.html" target="_blank" rel="noopener">参考原作</a> 。</p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R Markdown </tag>
            
            <tag> 数据报告 </tag>
            
            <tag> 可重复性 </tag>
            
            <tag> 可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据可视化-R绘图包系列</title>
      <link href="/2018/04/07/shu-ju-ke-shi-hua-r-hui-tu-bao-xi-lie/"/>
      <url>/2018/04/07/shu-ju-ke-shi-hua-r-hui-tu-bao-xi-lie/</url>
      
        <content type="html"><![CDATA[<p>R 中有四大框架用于产生静态图形: graphics、grid、lattice、ggplot2，利用这些包可以将结构或非结构数据转换成适当的可视化图表，展现出隐藏在数据中的信息</p><p>此系列文章主要介绍 R 基础绘图命令，涵盖 graphics、lattice、ggplot2 等包，欢迎阅读。</p><blockquote><p>文章列表：</p><ul><li><a href="https://blog-1255524710.cos.ap-beijing.myqcloud.com/html/graphics.html" target="_blank" rel="noopener">graphics：R 基础绘图包-par()</a></li><li><a href="https://blog-1255524710.cos.ap-beijing.myqcloud.com/html/graphics-plot.html" target="_blank" rel="noopener">graphics：R 基础绘图包-plot()</a></li><li><a href>lattice：条件作图</a> 待写</li><li><a href>ggplot2：图层作图</a> 待写</li><li>…………</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据可视化 </tag>
            
            <tag> graphics </tag>
            
            <tag> lattice </tag>
            
            <tag> ggplot2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据可视化 - 地图可视化系列文章</title>
      <link href="/2018/04/05/shu-ju-ke-shi-hua-di-tu-ke-shi-hua-xi-lie-wen-zhang/"/>
      <url>/2018/04/05/shu-ju-ke-shi-hua-di-tu-ke-shi-hua-xi-lie-wen-zhang/</url>
      
        <content type="html"><![CDATA[<p>可视化的形式也五彩缤纷，星现多维化的局面，并正在发展，地图可视化是空间信息可视化的最主要形式，这种数据表达方式让人一目了然，方便挖掘深层信息，更好的辅助决策</p><iframe height="450" src="http://lchiffon.github.io/REmap/REmapExamples/demo1.html" width="100%"></iframe><p>此系列文章主要介绍地图类 API 的使用以及诸多地图可视化包的使用。</p><blockquote><p>文章列表：</p><ul><li><a href="https://blog-1255524710.cos.ap-beijing.myqcloud.com/html/intro.html" target="_blank" rel="noopener">REmap + BaidumapAPI：交互式地图</a></li><li><a href>百度地图 API 那些事</a>  待写</li><li>…………</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> API </tag>
            
            <tag> REmap </tag>
            
            <tag> 地图可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DT：DataTables 库的 R 接口</title>
      <link href="/2018/04/05/dt-datatables-ku-de-r-jie-kou/"/>
      <url>/2018/04/05/dt-datatables-ku-de-r-jie-kou/</url>
      
        <content type="html"><![CDATA[<p>R 包 <strong>DT</strong> 为 JavaScript 的 <a href="https://datatables.net/" target="_blank" style="font-weight: bold;color:#18bc9c;">DataTable</a> 库提供了一个 R 接口。R 对象（矩阵或数据框）可在 HTML 页面上显示为表格，<strong>DataTable</strong> 在表格中提供过滤，分页，排序和许多其他功能。</p><p>此文章翻译自 <a href="https://rstudio.github.io/DT" target="_blank" rel="noopener">DT包官方文档</a>，十分感谢谢益辉大神提供了如此方便的 HTML 页面数据表展现包。</p><blockquote><p>译文列表：</p><ul><li><a href="https://blog-1255524710.cos.ap-beijing.myqcloud.com/html/DT.html" target="_blank" rel="noopener">DT：DataTables 库的 R 接口</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> DT </tag>
            
            <tag> 数据处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据可视化-formattable包</title>
      <link href="/2018/03/22/shu-ju-ke-shi-hua-formattable-bao/"/>
      <url>/2018/03/22/shu-ju-ke-shi-hua-formattable-bao/</url>
      
        <content type="html"><![CDATA[<p>该软件包使用预定义的格式化规则更加丰富形象地展示数据，在存储原始数据的同时将输出结果用格式化输出，使数据在保留原有属性的基础上更加易读</p><h2 id="加载包"><a href="#加载包" class="headerlink" title="加载包"></a>加载包</h2><p>这个包的功能很简单，但是却很具创意性，它颠覆了 R 语言数据以及数据表的呈现方式，数据方面提供了百分数、会计技术等多个 R 尚未支持的数据格式；数据表方面支持自定义视觉化元素，如对某一列数据进行字号、颜色、背景、以及图形化处理，整体的版式仍然保留表格的样式，但是已经具有了表和图结合的意味。</p><p>首先加载所需的程序包：</p><pre class=" language-r"><code class="language-r">devtools<span class="token operator">::</span>install_github<span class="token punctuation">(</span><span class="token string">"renkun-ken/formattable"</span><span class="token punctuation">)</span>install.packages<span class="token punctuation">(</span><span class="token string">"formattable"</span><span class="token punctuation">)</span>library<span class="token punctuation">(</span><span class="token string">"formattable"</span><span class="token punctuation">)</span></code></pre><p><br></p><hr><h2 id="格式化数据"><a href="#格式化数据" class="headerlink" title="格式化数据"></a>格式化数据</h2><p>该包提供了几个典型的可格式化对象，它们包括：<code>percent</code>, <code>comma</code>, <code>currency</code>, <code>accounting</code> 和 <code>scientific</code> 。这些对象实质上是具有预定义格式规则和参数的数值型向量。</p><h3 id="percent"><a href="#percent" class="headerlink" title="percent"></a>percent</h3><p>percent-函数定义：将输出向量自定义为百分比数字格式</p><pre class=" language-r"><code class="language-r">percent<span class="token punctuation">(</span>x<span class="token punctuation">,</span> digits <span class="token operator">=</span> <span class="token number">2L</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"f"</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## Default S3 method:</span>percent<span class="token punctuation">(</span>x<span class="token punctuation">,</span> digits <span class="token operator">=</span> <span class="token number">2L</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"f"</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## S3 method for class 'character'</span>percent<span class="token punctuation">(</span>x<span class="token punctuation">,</span> digits <span class="token operator">=</span> <span class="token keyword">NA</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"f"</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span></code></pre><blockquote><p>参数列表：<br>x：数值型向量<br>digits：一个整数，用于指示百分比字符串的位数<br>format：格式类型，传递给formatC</p></blockquote><ul><li>Examples-函数使用</li></ul><pre class=" language-r"><code class="language-r">p <span class="token operator">&lt;-</span> percent<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">,</span> <span class="token number">0.03</span><span class="token punctuation">,</span> <span class="token number">0.12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>p<span class="token operator">></span> <span class="token comment" spellcheck="true"># 函数保留了保留其数学运算属性</span><span class="token operator">></span> p <span class="token operator">+</span> <span class="token number">0.05</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">15.00</span>% <span class="token number">7.00</span>%  <span class="token number">8.00</span>%  <span class="token number">17.00</span>%<span class="token operator">></span> mean<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">6.75</span>%<span class="token operator">></span> <span class="token comment" spellcheck="true"># formattable格式继承了numeric属性，因而保留了数学运算能力</span><span class="token operator">></span> class<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"formattable"</span> <span class="token string">"numeric"</span> </code></pre><hr><h3 id="comma"><a href="#comma" class="headerlink" title="comma"></a>comma</h3><p>comma-函数定义：将输出向量自定义为千位分隔符数字格式</p><pre class=" language-r"><code class="language-r">comma<span class="token punctuation">(</span>x<span class="token punctuation">,</span> digits<span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"f"</span><span class="token punctuation">,</span> big.mark <span class="token operator">=</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## Default S3 method:</span>comma<span class="token punctuation">(</span>x<span class="token punctuation">,</span> digits <span class="token operator">=</span> <span class="token number">2L</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"f"</span><span class="token punctuation">,</span> big.mark <span class="token operator">=</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## S3 method for class 'character'</span>comma<span class="token punctuation">(</span>x<span class="token punctuation">,</span> digits <span class="token operator">=</span> max<span class="token punctuation">(</span>get_digits<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"f"</span><span class="token punctuation">,</span>  big.mark <span class="token operator">=</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span></code></pre><blockquote><p>参数列表：<br>x：数值型向量<br>digits：一个整数，用于指示百分比字符串的位数<br>format：格式类型，传递给formatC</p></blockquote><ul><li>Examples-函数使用</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> comma<span class="token punctuation">(</span><span class="token number">1000000</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">000</span><span class="token punctuation">,</span><span class="token number">000.00</span><span class="token operator">></span> comma<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">1250000</span><span class="token punctuation">,</span> <span class="token number">225000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">000.00</span> <span class="token number">225</span><span class="token punctuation">,</span><span class="token number">000.00</span>  <span class="token operator">></span> comma<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">1250000</span><span class="token punctuation">,</span> <span class="token number">225000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"d"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">000</span> <span class="token number">225</span><span class="token punctuation">,</span><span class="token number">000</span>  <span class="token operator">></span> comma<span class="token punctuation">(</span><span class="token string">"123,345.123"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">123</span><span class="token punctuation">,</span><span class="token number">345.123</span></code></pre><hr><h3 id="currency"><a href="#currency" class="headerlink" title="currency"></a>currency</h3><p>currency-函数定义：将输出向量自定义为百分比数字格式</p><pre class=" language-r"><code class="language-r">currency<span class="token punctuation">(</span>x<span class="token punctuation">,</span> symbol<span class="token punctuation">,</span> digits<span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"f"</span><span class="token punctuation">,</span> big.mark <span class="token operator">=</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## Default S3 method:</span>currency<span class="token punctuation">(</span>x<span class="token punctuation">,</span> symbol <span class="token operator">=</span> <span class="token string">"$"</span><span class="token punctuation">,</span> digits <span class="token operator">=</span> <span class="token number">2L</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"f"</span><span class="token punctuation">,</span>  big.mark <span class="token operator">=</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## S3 method for class 'character'</span>currency<span class="token punctuation">(</span>x<span class="token punctuation">,</span> symbol <span class="token operator">=</span> get_currency_symbol<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>  digits <span class="token operator">=</span> max<span class="token punctuation">(</span>get_digits<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"f"</span><span class="token punctuation">,</span> big.mark <span class="token operator">=</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span></code></pre><blockquote><p>参数列表：<br>x：数值型向量<br>symbol：货币符号<br>digits：一个整数，用于指示百分比字符串的位数<br>format：格式类型，传递给formatC<br>big.mark：千分隔符<br>sep：符号和值之间的分隔符</p></blockquote><ul><li>Examples-函数使用</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> currency<span class="token punctuation">(</span><span class="token number">200000</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">$</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">000.00</span><span class="token operator">></span> currency<span class="token punctuation">(</span><span class="token number">1200000</span><span class="token punctuation">,</span> <span class="token string">"USD"</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"d"</span><span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> USD <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">000</span><span class="token operator">></span> currency<span class="token punctuation">(</span><span class="token string">"$ 120,250.50"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">$</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">250.50</span><span class="token operator">></span> currency<span class="token punctuation">(</span><span class="token string">"HK$ 120, 250.50"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> HK<span class="token operator">$</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">250.50</span></code></pre><hr><h3 id="accounting"><a href="#accounting" class="headerlink" title="accounting"></a>accounting</h3><ul><li>accounting-函数定义：将输出向量自定义为会计数字格式</li></ul><pre class=" language-r"><code class="language-r">accounting<span class="token punctuation">(</span>x<span class="token punctuation">,</span> digits <span class="token operator">=</span> <span class="token number">2L</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"f"</span><span class="token punctuation">,</span> big.mark <span class="token operator">=</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## Default S3 method:</span>accounting<span class="token punctuation">(</span>x<span class="token punctuation">,</span> digits <span class="token operator">=</span> <span class="token number">2L</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"f"</span><span class="token punctuation">,</span> big.mark <span class="token operator">=</span> <span class="token string">","</span><span class="token punctuation">,</span>  <span class="token ellipsis">...</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## S3 method for class 'character'</span>accounting<span class="token punctuation">(</span>x<span class="token punctuation">,</span> digits <span class="token operator">=</span> max<span class="token punctuation">(</span>get_digits<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"f"</span><span class="token punctuation">,</span>  big.mark <span class="token operator">=</span> <span class="token string">","</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span></code></pre><blockquote><p>参数列表：<br>x：数值型向量<br>digits：一个整数，用于指示小数位数<br>format：格式类型，传递给formatC<br>big.mark：千分隔符</p></blockquote><ul><li>Examples-函数使用</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> <span class="token comment" spellcheck="true"># 两位小数，同时负值加括号</span><span class="token operator">></span> balance <span class="token operator">&lt;-</span> accounting<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1200</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> balance<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">000.00</span> <span class="token number">500.00</span>   <span class="token number">200.00</span>   <span class="token punctuation">(</span><span class="token number">150.00</span><span class="token punctuation">)</span> <span class="token number">0.00</span>     <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">200.00</span><span class="token operator">></span> accounting<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">1200</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3500</span><span class="token punctuation">,</span> <span class="token number">2600</span><span class="token punctuation">)</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"d"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">200</span>   <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token number">600</span>  <span class="token operator">></span> <span class="token comment" spellcheck="true"># 函数保留了保留其数学运算属性</span><span class="token operator">></span> balance <span class="token operator">+</span> <span class="token number">1000</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token number">000.00</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">500.00</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">200.00</span> <span class="token number">850.00</span>   <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">000.00</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token number">200.00</span></code></pre><hr><h3 id="scientific"><a href="#scientific" class="headerlink" title="scientific"></a>scientific</h3><pre class=" language-r"><code class="language-r">scientific<span class="token punctuation">(</span>x<span class="token punctuation">,</span> format <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"e"</span><span class="token punctuation">,</span> <span class="token string">"E"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> digits <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span></code></pre><blockquote><p>参数列表：<br>x：数值型向量<br>digits：一个整数，用于指示小数位数<br>format：格式类型，传递给formatC</p></blockquote><ul><li>Examples-函数使用</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> scientific<span class="token punctuation">(</span><span class="token number">1253421</span><span class="token punctuation">,</span> digits <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1.25342100e+06</span><span class="token operator">></span> scientific<span class="token punctuation">(</span><span class="token number">1253421</span><span class="token punctuation">,</span> digits <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"E"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1.25342100E+06</span></code></pre><hr><h3 id="复杂数据结构"><a href="#复杂数据结构" class="headerlink" title="复杂数据结构"></a>复杂数据结构</h3><p><code>formattable()</code> 将高度可定制的格式应用于各种类的对象，如 <code>numeric</code>, <code>logical</code>, <code>factor</code>, <code>Date</code>, <code>data.frame</code> 等。例如，数据框可能也可存储格式化的列向量（这是自然地，因为数据框就是由若干个等长的向量组成的）：</p><ul><li>数据框数据格式化</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> df <span class="token operator">&lt;-</span> data.frame<span class="token punctuation">(</span><span class="token operator">+</span>   id <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">+</span>   name <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"A1"</span><span class="token punctuation">,</span> <span class="token string">"A2"</span><span class="token punctuation">,</span> <span class="token string">"B1"</span><span class="token punctuation">,</span> <span class="token string">"B2"</span><span class="token punctuation">,</span> <span class="token string">"C1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>   balance <span class="token operator">=</span> accounting<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">52500</span><span class="token punctuation">,</span> <span class="token number">36150</span><span class="token punctuation">,</span> <span class="token number">25000</span><span class="token punctuation">,</span> <span class="token number">18300</span><span class="token punctuation">,</span> <span class="token number">7600</span><span class="token punctuation">)</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>   growth <span class="token operator">=</span> percent<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.15</span><span class="token punctuation">,</span> <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">"d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>   ready <span class="token operator">=</span> formattable<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"yes"</span><span class="token punctuation">,</span> <span class="token string">"no"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> df  id name balance growth ready<span class="token number">1</span>  <span class="token number">1</span>   A1  <span class="token number">52</span><span class="token punctuation">,</span><span class="token number">500</span>    <span class="token number">30</span>%   yes<span class="token number">2</span>  <span class="token number">2</span>   A2  <span class="token number">36</span><span class="token punctuation">,</span><span class="token number">150</span>    <span class="token number">30</span>%   yes<span class="token number">3</span>  <span class="token number">3</span>   B1  <span class="token number">25</span><span class="token punctuation">,</span><span class="token number">000</span>    <span class="token number">10</span>%    no<span class="token number">4</span>  <span class="token number">4</span>   B2  <span class="token number">18</span><span class="token punctuation">,</span><span class="token number">300</span>    <span class="token number">15</span>%    no<span class="token number">5</span>  <span class="token number">5</span>   C1   <span class="token number">7</span><span class="token punctuation">,</span><span class="token number">600</span>    <span class="token number">15</span>%   yes</code></pre><p><br></p><hr><h2 id="格式化数据表"><a href="#格式化数据表" class="headerlink" title="格式化数据表"></a>格式化数据表</h2><h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>普通的表格数据如下所示：</p><pre class=" language-r"><code class="language-r"><span class="token operator">></span> df <span class="token operator">&lt;-</span> data.frame<span class="token punctuation">(</span><span class="token operator">+</span>   id <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token operator">+</span>   name <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"Bob"</span><span class="token punctuation">,</span> <span class="token string">"Ashley"</span><span class="token punctuation">,</span> <span class="token string">"James"</span><span class="token punctuation">,</span> <span class="token string">"David"</span><span class="token punctuation">,</span> <span class="token string">"Jenny"</span><span class="token punctuation">,</span> <span class="token operator">+</span>            <span class="token string">"Hans"</span><span class="token punctuation">,</span> <span class="token string">"Leo"</span><span class="token punctuation">,</span> <span class="token string">"John"</span><span class="token punctuation">,</span> <span class="token string">"Emily"</span><span class="token punctuation">,</span> <span class="token string">"Lee"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">+</span>   age <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>   grade <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>   test1_score <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">8.9</span><span class="token punctuation">,</span> <span class="token number">9.5</span><span class="token punctuation">,</span> <span class="token number">9.6</span><span class="token punctuation">,</span> <span class="token number">8.9</span><span class="token punctuation">,</span> <span class="token number">9.1</span><span class="token punctuation">,</span> <span class="token number">9.3</span><span class="token punctuation">,</span> <span class="token number">9.3</span><span class="token punctuation">,</span> <span class="token number">9.9</span><span class="token punctuation">,</span> <span class="token number">8.5</span><span class="token punctuation">,</span> <span class="token number">8.6</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>   test2_score <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">9.1</span><span class="token punctuation">,</span> <span class="token number">9.1</span><span class="token punctuation">,</span> <span class="token number">9.2</span><span class="token punctuation">,</span> <span class="token number">9.1</span><span class="token punctuation">,</span> <span class="token number">8.9</span><span class="token punctuation">,</span> <span class="token number">8.5</span><span class="token punctuation">,</span> <span class="token number">9.2</span><span class="token punctuation">,</span> <span class="token number">9.3</span><span class="token punctuation">,</span> <span class="token number">9.1</span><span class="token punctuation">,</span> <span class="token number">8.8</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>   final_score <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">9.3</span><span class="token punctuation">,</span> <span class="token number">9.4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8.9</span><span class="token punctuation">,</span> <span class="token number">9.25</span><span class="token punctuation">,</span> <span class="token number">9.6</span><span class="token punctuation">,</span> <span class="token number">8.8</span><span class="token punctuation">,</span> <span class="token number">8.7</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>   registered <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span> <span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span> <span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>   stringsAsFactors <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span><span class="token operator">></span> df   id   name age grade test1_score test2_score final_score registered<span class="token number">1</span>   <span class="token number">1</span>    Bob  <span class="token number">28</span>     C         <span class="token number">8.9</span>         <span class="token number">9.1</span>        <span class="token number">9.00</span>       <span class="token boolean">TRUE</span><span class="token number">2</span>   <span class="token number">2</span> Ashley  <span class="token number">27</span>     A         <span class="token number">9.5</span>         <span class="token number">9.1</span>        <span class="token number">9.30</span>      <span class="token boolean">FALSE</span><span class="token number">3</span>   <span class="token number">3</span>  James  <span class="token number">30</span>     A         <span class="token number">9.6</span>         <span class="token number">9.2</span>        <span class="token number">9.40</span>       <span class="token boolean">TRUE</span><span class="token number">4</span>   <span class="token number">4</span>  David  <span class="token number">28</span>     C         <span class="token number">8.9</span>         <span class="token number">9.1</span>        <span class="token number">9.00</span>      <span class="token boolean">FALSE</span><span class="token number">5</span>   <span class="token number">5</span>  Jenny  <span class="token number">29</span>     B         <span class="token number">9.1</span>         <span class="token number">8.9</span>        <span class="token number">9.00</span>       <span class="token boolean">TRUE</span><span class="token number">6</span>   <span class="token number">6</span>   Hans  <span class="token number">29</span>     B         <span class="token number">9.3</span>         <span class="token number">8.5</span>        <span class="token number">8.90</span>       <span class="token boolean">TRUE</span><span class="token number">7</span>   <span class="token number">7</span>    Leo  <span class="token number">27</span>     B         <span class="token number">9.3</span>         <span class="token number">9.2</span>        <span class="token number">9.25</span>       <span class="token boolean">TRUE</span><span class="token number">8</span>   <span class="token number">8</span>   John  <span class="token number">27</span>     A         <span class="token number">9.9</span>         <span class="token number">9.3</span>        <span class="token number">9.60</span>      <span class="token boolean">FALSE</span><span class="token number">9</span>   <span class="token number">9</span>  Emily  <span class="token number">31</span>     C         <span class="token number">8.5</span>         <span class="token number">9.1</span>        <span class="token number">8.80</span>      <span class="token boolean">FALSE</span><span class="token number">10</span> <span class="token number">10</span>    Lee  <span class="token number">30</span>     C         <span class="token number">8.6</span>         <span class="token number">8.8</span>        <span class="token number">8.70</span>      <span class="token boolean">FALSE</span></code></pre><p>格式化表格，具有以下可视化效果：</p><pre class=" language-r"><code class="language-r"><span class="token operator">></span> formattable<span class="token punctuation">(</span>df<span class="token punctuation">,</span> <span class="token operator">+</span>             list<span class="token punctuation">(</span><span class="token operator">+</span>               age <span class="token operator">=</span> color_tile<span class="token punctuation">(</span><span class="token string">"white"</span><span class="token punctuation">,</span> <span class="token string">"orange"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>               grade <span class="token operator">=</span> formatter<span class="token punctuation">(</span><span class="token operator">+</span>                 <span class="token string">"span"</span><span class="token punctuation">,</span> <span class="token operator">+</span>                 style <span class="token operator">=</span> x <span class="token operator">~</span> ifelse<span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token string">"A"</span><span class="token punctuation">,</span> style<span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">"green"</span><span class="token punctuation">,</span> font.weight <span class="token operator">=</span> <span class="token string">"bold"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">NA</span><span class="token punctuation">)</span><span class="token operator">+</span>               <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>               area<span class="token punctuation">(</span>col <span class="token operator">=</span> c<span class="token punctuation">(</span>test1_score<span class="token punctuation">,</span> test2_score<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">~</span> normalize_bar<span class="token punctuation">(</span><span class="token string">"pink"</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>               final_score <span class="token operator">=</span> formatter<span class="token punctuation">(</span><span class="token operator">+</span>                 <span class="token string">"span"</span><span class="token punctuation">,</span><span class="token operator">+</span>                 style <span class="token operator">=</span> x <span class="token operator">~</span> style<span class="token punctuation">(</span>color <span class="token operator">=</span> ifelse<span class="token punctuation">(</span>rank<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"green"</span><span class="token punctuation">,</span> <span class="token string">"gray"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>                 x <span class="token operator">~</span> sprintf<span class="token punctuation">(</span><span class="token string">"%.2f (rank: %02d)"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> rank<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>               <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>               registered <span class="token operator">=</span> formatter<span class="token punctuation">(</span><span class="token operator">+</span>                 <span class="token string">"span"</span><span class="token punctuation">,</span><span class="token operator">+</span>                 style <span class="token operator">=</span> x <span class="token operator">~</span> style<span class="token punctuation">(</span>color <span class="token operator">=</span> ifelse<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token string">"green"</span><span class="token punctuation">,</span> <span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>                 x <span class="token operator">~</span> icontext<span class="token punctuation">(</span>ifelse<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token string">"ok"</span><span class="token punctuation">,</span> <span class="token string">"remove"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ifelse<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token string">"Yes"</span><span class="token punctuation">,</span> <span class="token string">"No"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>               <span class="token punctuation">)</span><span class="token operator">+</span>             <span class="token punctuation">)</span><span class="token operator">+</span> <span class="token punctuation">)</span></code></pre><p><img src="https://blog-1255524710.cos.ap-beijing.myqcloud.com/cover/formattable.png" alt="formattable.png"></p><p>表格中使用的图标集由<a href="GLYPHICONS.com">GLYPHICONS.com</a>提供并包含在<a href="https://getbootstrap.com/docs/3.3/components/" target="_blank" rel="noopener">Bootstrap</a>中。</p><p>注意到一共用了 <code>文字格式自定义、文字背景自定义、文本自定义</code> 三种自定义可视化类型：</p><blockquote><p>color_tile函数用于输出按照数值量级进行颜色背景填充的列。</p><p>formatter函数提供字体显示格式的自定义，grade列自定义了值为A的记录显示绿色，并将字体加粗，否则忽略。<br>test1_score, test2_score两列通过area函数在对应字体背景位置使用条形图来代表指标量级大小，颜色填充粉色。<br>final_score列对指标按照top3显示绿色，其余显示灰色，同时将内容显示格式自定义为浮点型+(rank:名次)进行显示。<br>registered列则在对填充颜色按照对应布尔值进行显示（TRUE显示绿色、FALSE显示红色）之外，在左侧添加了对用的icon文本（TRUE显示绿色对号，FALSE显示红色叉号）。</p></blockquote><hr><h3 id="文字格式自定义"><a href="#文字格式自定义" class="headerlink" title="文字格式自定义"></a>文字格式自定义</h3><h4 id="color-text"><a href="#color-text" class="headerlink" title="color_text"></a>color_text</h4><p>color_text(“color1”, “color2”)：输出按照数值量级进行字体颜色填充的列</p><pre class=" language-r"><code class="language-r">formattable<span class="token punctuation">(</span>mtcars<span class="token punctuation">,</span> list<span class="token punctuation">(</span>mpg <span class="token operator">=</span> color_text<span class="token punctuation">(</span><span class="token string">"black"</span><span class="token punctuation">,</span> <span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="formatter"><a href="#formatter" class="headerlink" title="formatter"></a>formatter</h4><p>formatter-函数定义：创建一个HTML元素制作的格式化函数</p><pre class=" language-r"><code class="language-r">formatter<span class="token punctuation">(</span>.tag<span class="token punctuation">,</span> style <span class="token operator">=</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span></code></pre><blockquote><p>参数列表：<br>.tag：HTML 标签，默认为 span<br>style：CSS语句<br>注：类似 x ~ expr 的公式将表现得像 function(x) expr</p></blockquote><p>诸多CSS样式于此可见：<a href="https://www.w3.org/Style/CSS/all-properties" target="_blank" rel="noopener">List of CSS properties</a></p><h3 id="文字背景自定义"><a href="#文字背景自定义" class="headerlink" title="文字背景自定义"></a>文字背景自定义</h3><h4 id="色块函数"><a href="#色块函数" class="headerlink" title="色块函数"></a>色块函数</h4><pre class=" language-r"><code class="language-r"><span class="token comment" spellcheck="true"># color_tile("color1", "color2")</span><span class="token comment" spellcheck="true"># 输出按照数值量级进行颜色背景填充的列</span>formattable<span class="token punctuation">(</span>mtcars<span class="token punctuation">,</span> list<span class="token punctuation">(</span>mpg <span class="token operator">=</span> color_tile<span class="token punctuation">(</span><span class="token string">"white"</span><span class="token punctuation">,</span> <span class="token string">"pink"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># color_bar(color = "lightgray", fun = "proportion", ...)</span><span class="token comment" spellcheck="true"># 输出有颜色填充的，大小以数值量级为比例的色块</span>formattable<span class="token punctuation">(</span>mtcars<span class="token punctuation">,</span> list<span class="token punctuation">(</span>mpg <span class="token operator">=</span> color_bar<span class="token punctuation">(</span><span class="token string">"lightgray"</span><span class="token punctuation">,</span> proportion<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># normalize_bar(color = "lightgray", ...)</span><span class="token comment" spellcheck="true"># proportion_bar(color = "lightgray", ...)</span><span class="token comment" spellcheck="true"># 按正常配置输出大小以数值量级为比例的色块</span>formattable<span class="token punctuation">(</span>mtcars<span class="token punctuation">,</span> list<span class="token punctuation">(</span>mpg <span class="token operator">=</span> normalize_bar<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>formattable<span class="token punctuation">(</span>mtcars<span class="token punctuation">,</span> list<span class="token punctuation">(</span>mpg <span class="token operator">=</span> proportion_bar<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="area"><a href="#area" class="headerlink" title="area"></a>area</h4><p>area-函数定义：选取特定表格区域进行格式化</p><pre class=" language-r"><code class="language-r">area<span class="token punctuation">(</span>row<span class="token punctuation">,</span> col<span class="token punctuation">)</span> <span class="token operator">~</span> formatter<span class="token operator">/</span>normalize_bar……</code></pre><blockquote><p>参数列表：<br>row/col：选取的行与列，默认为全选</p></blockquote><h3 id="文本自定义"><a href="#文本自定义" class="headerlink" title="文本自定义"></a>文本自定义</h3><h4 id="icontext"><a href="#icontext" class="headerlink" title="icontext"></a>icontext</h4><p>icontext-函数定义：文本修饰函数-添加图标、更改内容</p><pre class=" language-r"><code class="language-r">icontext<span class="token punctuation">(</span>icon<span class="token punctuation">,</span> text <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token keyword">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span></code></pre><blockquote><p>参数列表：<br>icon：图标名称的字符矢量或字符矢量列表<br>text：文本的字符向量</p></blockquote><p>使用的图标集由<a href="GLYPHICONS.com">GLYPHICONS.com</a>提供并包含在<a href="https://getbootstrap.com/docs/3.3/components/" target="_blank" rel="noopener">Bootstrap</a>中。</p><p><br></p><hr><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><blockquote><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://github.com/renkun-ken/formattable" target="_blank" rel="noopener">Github：任坤的formattable项目</a></li><li><a href="https://mp.weixin.qq.com/s/QAr7LYx4jgvOlNBVAUZX5g" target="_blank" rel="noopener">杜雨：一款脑洞大开的表格可视化神器</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> formattable </tag>
            
            <tag> 数据展示 </tag>
            
            <tag> 数据可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据操作-apply函数族</title>
      <link href="/2018/03/15/shu-ju-cao-zuo-apply-han-shu-zu/"/>
      <url>/2018/03/15/shu-ju-cao-zuo-apply-han-shu-zu/</url>
      
        <content type="html"><![CDATA[<p>R 作为一种向量化的编程语言，一大特征便是以向量计算替代了循环计算，使效率大大提升。apply函数族正是为解决数据循环处理问题而生的 —— 面向不同数据类型，生成不同返回值的包含8个相关函数的函数族。</p><h2 id="为何要用apply？"><a href="#为何要用apply？" class="headerlink" title="为何要用apply？"></a>为何要用apply？</h2><p>在使用 R 时，要尽量用 array 的方式思考，避免 for 循环，写过多的 for 循环代码，最后把 R 代码写的跟 C 似得说明你没有进入 R 的思考方式，是一种费力不讨好的行为。那么不用循环怎么实现迭代呢？apply函数族是一把利器，它不是一个函数，而是一族功能类似的函数。</p><hr><h2 id="语法详解"><a href="#语法详解" class="headerlink" title="语法详解"></a>语法详解</h2><h3 id="apply"><a href="#apply" class="headerlink" title="apply"></a>apply</h3><p>apply-函数定义：在 X 上，沿 margin 方向，依次调用 FUN</p><pre class=" language-r"><code class="language-r">apply<span class="token punctuation">(</span>X<span class="token punctuation">,</span> margin<span class="token punctuation">,</span> FUN<span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>X：数组、矩阵、数据框<br>margin：按维度运算，1表示按行，2表示按列，c(1,3)表示第1、3维<br>FUN：要使用的函数</p></blockquote><ul><li>eg1-矩阵按列求和</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> mat <span class="token operator">&lt;-</span> matrix<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">></span> mat     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">1</span>    <span class="token number">4</span>    <span class="token number">7</span>   <span class="token number">10</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">2</span>    <span class="token number">5</span>    <span class="token number">8</span>   <span class="token number">11</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">3</span>    <span class="token number">6</span>    <span class="token number">9</span>   <span class="token number">12</span><span class="token operator">></span> apply<span class="token punctuation">(</span>mat<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">6</span> <span class="token number">15</span> <span class="token number">24</span> <span class="token number">33</span></code></pre><ul><li>eg2-数组第1、3维度组合求和</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> ary <span class="token operator">&lt;-</span> array<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span> c<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> ary<span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token number">1</span>     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">1</span>    <span class="token number">3</span>    <span class="token number">5</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">2</span>    <span class="token number">4</span>    <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token number">2</span>     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">7</span>    <span class="token number">9</span>   <span class="token number">11</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">8</span>   <span class="token number">10</span>   <span class="token number">12</span><span class="token operator">></span> apply<span class="token punctuation">(</span>ary<span class="token punctuation">,</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span>     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">9</span>   <span class="token number">27</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>   <span class="token number">12</span>   <span class="token number">30</span></code></pre><ul><li>eg3-数据框按列求均值</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> data <span class="token operator">&lt;-</span> data.frame<span class="token punctuation">(</span>x1<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span> x2<span class="token operator">=</span><span class="token number">6</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">></span> data  x1 x2<span class="token number">1</span>  <span class="token number">1</span>  <span class="token number">6</span><span class="token number">2</span>  <span class="token number">2</span>  <span class="token number">7</span><span class="token number">3</span>  <span class="token number">3</span>  <span class="token number">8</span><span class="token number">4</span>  <span class="token number">4</span>  <span class="token number">9</span><span class="token number">5</span>  <span class="token number">5</span> <span class="token number">10</span><span class="token operator">></span> apply<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> mean<span class="token punctuation">)</span>x1 x2  <span class="token number">3</span>  <span class="token number">8</span> </code></pre><hr><h3 id="tapply"><a href="#tapply" class="headerlink" title="tapply"></a>tapply</h3><p>tapply-函数定义：按 INDEX 值分组，相同值对应下标的 X 中的元素形成一个集合，应用到 FUN</p><pre class=" language-r"><code class="language-r">tapply<span class="token punctuation">(</span>X<span class="token punctuation">,</span> INDEX<span class="token punctuation">,</span> FUN <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">,</span> simplify <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>X：向量、数组<br>INDEX：用于分组的索引<br>FUN：要使用的函数<br>simplify : 是否数组化，当值TRUE时，输出结果按数组进行分组输出</p></blockquote><ul><li>eg1-当FUN为NULL，返回分组的结果，返回值中相等的元素所对应的下标属于同一组</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> x <span class="token operator">&lt;-</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">6</span><span class="token operator">></span> INDEX <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token operator">></span> tapply<span class="token punctuation">(</span>x<span class="token punctuation">,</span> INDEX<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">3</span> <span class="token number">3</span></code></pre><ul><li>eg2-向量按 INDEX 分组求和</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> tapply<span class="token punctuation">(</span>x<span class="token punctuation">,</span> INDEX<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> a  b  c  <span class="token number">3</span>  <span class="token number">3</span> <span class="token number">15</span> </code></pre><p>eg3-矩阵按 INDEX 分组求均值</p><pre class=" language-r"><code class="language-r"><span class="token operator">></span> mat <span class="token operator">&lt;-</span> matrix<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">></span> mat     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">1</span>    <span class="token number">3</span>    <span class="token number">5</span>    <span class="token number">7</span>    <span class="token number">9</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">2</span>    <span class="token number">4</span>    <span class="token number">6</span>    <span class="token number">8</span>   <span class="token number">10</span><span class="token operator">></span> INDEX <span class="token operator">&lt;-</span> matrix<span class="token punctuation">(</span>c<span class="token punctuation">(</span>rep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nrow<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">></span> INDEX     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">1</span>    <span class="token number">1</span>    <span class="token number">1</span>    <span class="token number">2</span>    <span class="token number">2</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">1</span>    <span class="token number">1</span>    <span class="token number">2</span>    <span class="token number">2</span>    <span class="token number">2</span><span class="token operator">></span> tapply<span class="token punctuation">(</span>mat<span class="token punctuation">,</span> INDEX<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">2</span> <span class="token number">2</span> <span class="token number">2</span> <span class="token number">2</span><span class="token operator">></span> tapply<span class="token punctuation">(</span>mat<span class="token punctuation">,</span> INDEX<span class="token punctuation">,</span> mean<span class="token punctuation">)</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">8</span> </code></pre><hr><h3 id="lapply"><a href="#lapply" class="headerlink" title="lapply"></a>lapply</h3><p>lapply-函数定义：在 X 上逐个元素调用 FUN, 返回和 X 等长的 list 作为结果集</p><pre class=" language-r"><code class="language-r">lapply<span class="token punctuation">(</span>X<span class="token punctuation">,</span> FUN<span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>X：列表、向量、数据框<br>FUN：要使用的函数</p></blockquote><ul><li>eg1-计算 list 中的每个 KEY 对应数据的均值</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> lst <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span> b<span class="token operator">=</span>seq<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> lst<span class="token operator">$</span>a <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span>  <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span><span class="token operator">$</span>b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">0</span> <span class="token number">2</span> <span class="token number">4</span> <span class="token number">6</span><span class="token operator">$</span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">2</span> <span class="token number">5</span> <span class="token number">8</span><span class="token operator">></span> lapply<span class="token punctuation">(</span>lst<span class="token punctuation">,</span> mean<span class="token punctuation">)</span><span class="token operator">$</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">5.5</span><span class="token operator">$</span>b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">3</span><span class="token operator">$</span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">5</span></code></pre><ul><li>eg2-对数据框的列求和</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> data <span class="token operator">&lt;-</span> data.frame<span class="token punctuation">(</span>x1<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span> x2<span class="token operator">=</span><span class="token number">6</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">></span> data  x1 x2<span class="token number">1</span>  <span class="token number">1</span>  <span class="token number">6</span><span class="token number">2</span>  <span class="token number">2</span>  <span class="token number">7</span><span class="token number">3</span>  <span class="token number">3</span>  <span class="token number">8</span><span class="token number">4</span>  <span class="token number">4</span>  <span class="token number">9</span><span class="token number">5</span>  <span class="token number">5</span> <span class="token number">10</span><span class="token operator">></span> lapply<span class="token punctuation">(</span>data<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token operator">$</span>x1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">15</span><span class="token operator">$</span>x2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">40</span></code></pre><ul><li>eg3-找出闰年：对向量内各元素依次调用函数</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> isLeapYear <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">+</span>   <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>a<span class="token percent-operator operator">%%</span><span class="token number">4</span><span class="token operator">==</span><span class="token number">0</span> <span class="token operator">&amp;</span> a<span class="token percent-operator operator">%/%</span><span class="token number">100</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">|</span> a<span class="token percent-operator operator">%%</span><span class="token number">400</span><span class="token operator">==</span><span class="token number">0</span> <span class="token punctuation">)</span><span class="token operator">+</span>     a<span class="token operator">+</span> <span class="token punctuation">}</span><span class="token operator">></span> a <span class="token operator">&lt;-</span> <span class="token number">1900</span><span class="token operator">:</span><span class="token number">1910</span><span class="token operator">></span> unlist<span class="token punctuation">(</span>lapply<span class="token punctuation">(</span>a<span class="token punctuation">,</span> isLeapYear<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1900</span> <span class="token number">1904</span> <span class="token number">1908</span></code></pre><hr><h3 id="rapply"><a href="#rapply" class="headerlink" title="rapply"></a>rapply</h3><p>rapply-函数定义：递归版lapply，对list遍历直至无list，最终非list元素若类型是classes参数指定的类型，则调用FUN</p><pre class=" language-r"><code class="language-r">rapply<span class="token punctuation">(</span>list<span class="token punctuation">,</span> f<span class="token punctuation">,</span> classes <span class="token operator">=</span> <span class="token string">"ANY"</span><span class="token punctuation">,</span> deflt <span class="token operator">=</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span>how <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"unlist"</span><span class="token punctuation">,</span> <span class="token string">"replace"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>list：列表<br>f：要使用的函数<br>classes： 匹配类型, ANY为所有类型<br>deflt: 非匹配类型的默认值<br>how: 3种操作方式，</p><ul><li>replace：则用调用f后的结果替换原list中原来的元素；</li><li>list：新建一个list，类型匹配调用f函数，不匹配赋值为deflt；</li><li>unlist：执行一次unlist(recursive = TRUE)操作</li></ul></blockquote><ul><li>eg1-遍历 list 分组求和</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> lst <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span>a<span class="token operator">=</span>list<span class="token punctuation">(</span>aa<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ab<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token operator">=</span>list<span class="token punctuation">(</span>ba<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> lst<span class="token operator">$</span>a<span class="token operator">$</span>a<span class="token operator">$</span>aa<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token operator">$</span>a<span class="token operator">$</span>ab<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span><span class="token operator">$</span>b<span class="token operator">$</span>b<span class="token operator">$</span>ba <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span>  <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span><span class="token operator">></span> rapply<span class="token punctuation">(</span>lst<span class="token punctuation">,</span> sum<span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">"replace"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 输出结果为list</span><span class="token operator">$</span>a<span class="token operator">$</span>a<span class="token operator">$</span>aa<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">15</span><span class="token operator">$</span>a<span class="token operator">$</span>ab<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">40</span><span class="token operator">$</span>b<span class="token operator">$</span>b<span class="token operator">$</span>ba<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">55</span><span class="token operator">></span> rapply<span class="token punctuation">(</span>lst<span class="token punctuation">,</span> sum<span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">"unlist"</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 输出结果为vector</span>a.aa a.ab b.ba   <span class="token number">15</span>   <span class="token number">40</span>   <span class="token number">55</span> </code></pre><hr><h3 id="sapply"><a href="#sapply" class="headerlink" title="sapply"></a>sapply</h3><p>sapply-函数定义：简化版lapply，增加参数simplify和USE.NAMES，可设定输出类型</p><pre class=" language-r"><code class="language-r">sapply<span class="token punctuation">(</span>X<span class="token punctuation">,</span> FUN<span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">,</span> simplify <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">,</span> USE.NAMES <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>X：列表、向量、数据框<br>FUN：要使用的函数<br>simplify: 若FALSE，等价于lapply。否则，将lapply输出的list简化为vector或matrix<br>USE.NAMES: 如果X为字符串，TRUE设置字符串为数据名，FALSE不设置</p></blockquote><ul><li>eg1-simplify参数设定输出类型</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> lst <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span>a<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> sapply<span class="token punctuation">(</span>lst<span class="token punctuation">,</span> sum<span class="token punctuation">,</span> simplify <span class="token operator">=</span> F<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 输出list</span><span class="token operator">$</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">15</span><span class="token operator">$</span>b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">40</span><span class="token operator">></span> sapply<span class="token punctuation">(</span>lst<span class="token punctuation">,</span> sum<span class="token punctuation">)</span>                  <span class="token comment" spellcheck="true"># 输出vector</span> a  b <span class="token number">15</span> <span class="token number">40</span> <span class="token operator">></span> sapply<span class="token punctuation">(</span>lst<span class="token punctuation">,</span> fivenum<span class="token punctuation">)</span>              <span class="token comment" spellcheck="true"># 输出matrix</span>     a  b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token number">1</span>  <span class="token number">6</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token number">2</span>  <span class="token number">7</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token number">3</span>  <span class="token number">8</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token number">4</span>  <span class="token number">9</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token number">5</span> <span class="token number">10</span></code></pre><ul><li>eg2-USE.NAMES参数作用</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> val <span class="token operator">&lt;-</span> head<span class="token punctuation">(</span>letters<span class="token punctuation">)</span><span class="token operator">></span> val<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"a"</span> <span class="token string">"b"</span> <span class="token string">"c"</span> <span class="token string">"d"</span> <span class="token string">"e"</span> <span class="token string">"f"</span><span class="token operator">></span> sapply<span class="token punctuation">(</span>val<span class="token punctuation">,</span> paste<span class="token punctuation">)</span>  a   b   c   d   e   f <span class="token string">"a"</span> <span class="token string">"b"</span> <span class="token string">"c"</span> <span class="token string">"d"</span> <span class="token string">"e"</span> <span class="token string">"f"</span> <span class="token operator">></span> sapply<span class="token punctuation">(</span>val<span class="token punctuation">,</span> paste<span class="token punctuation">,</span> USE.NAMES <span class="token operator">=</span> F<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"a"</span> <span class="token string">"b"</span> <span class="token string">"c"</span> <span class="token string">"d"</span> <span class="token string">"e"</span> <span class="token string">"f"</span></code></pre><hr><h3 id="vapply"><a href="#vapply" class="headerlink" title="vapply"></a>vapply</h3><p>vapply-函数定义：类似sapply，但提供参数FUN.VALUE用以设定返回值的行名</p><pre class=" language-r"><code class="language-r">vapply<span class="token punctuation">(</span>X<span class="token punctuation">,</span> FUN<span class="token punctuation">,</span> FUN.VALUE<span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">,</span> USE.NAMES <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>X：列表、数据框<br>FUN：要使用的函数<br>FUN.VALUE：定义返回值的行名row.names<br>USE.NAMES: 如果X为字符串，TRUE设置字符串为数据名，FALSE不设置</p></blockquote><ul><li>eg1-FUN.VALUE参数设置返回值行名</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> lst <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span>a<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> res <span class="token operator">&lt;-</span> vapply<span class="token punctuation">(</span>lst<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> c<span class="token punctuation">(</span>min<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> max<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token punctuation">(</span>min.<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> max.<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> res     a  bmin. <span class="token number">1</span>  <span class="token number">6</span>max. <span class="token number">5</span> <span class="token number">10</span></code></pre><ul><li>eg2-对数据框的数据累计求和，并对每一行设置行名row.names</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> data <span class="token operator">&lt;-</span> data.frame<span class="token punctuation">(</span>cbind<span class="token punctuation">(</span>x1<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> x2<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> data  x1 x2<span class="token number">1</span>  <span class="token number">3</span>  <span class="token number">2</span><span class="token number">2</span>  <span class="token number">3</span>  <span class="token number">1</span><span class="token number">3</span>  <span class="token number">3</span>  <span class="token number">4</span><span class="token number">4</span>  <span class="token number">3</span>  <span class="token number">5</span><span class="token operator">></span> vapply<span class="token punctuation">(</span>data<span class="token punctuation">,</span> cumsum<span class="token punctuation">,</span> FUN.VALUE<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  x1 x2a  <span class="token number">3</span>  <span class="token number">2</span>b  <span class="token number">6</span>  <span class="token number">3</span>c  <span class="token number">9</span>  <span class="token number">7</span>d <span class="token number">12</span> <span class="token number">12</span></code></pre><hr><h3 id="mapply"><a href="#mapply" class="headerlink" title="mapply"></a>mapply</h3><p>mapply-函数定义：多变量版sapply，将FUN应用于多个同结构数据第一个元素组成的数组，然后是第二个元素组成的数组，依此类推</p><pre class=" language-r"><code class="language-r">mapply<span class="token punctuation">(</span>FUN<span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">,</span> MoreArgs<span class="token operator">=</span><span class="token keyword">NULL</span><span class="token punctuation">,</span> SIMPLIFY<span class="token operator">=</span><span class="token boolean">TRUE</span><span class="token punctuation">,</span> USE.NAMES<span class="token operator">=</span><span class="token boolean">TRUE</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>FUN：要使用的函数<br>…: 接收多个数据(list、vector)<br>MoreArgs: FUN的参数列表<br>simplify: 若FALSE，输出list。否则，将输出的list简化为vector或matrix<br>USE.NAMES: 如果X为字符串，TRUE设置字符串为数据名，FALSE不设置</p></blockquote><ul><li>eg1-输入两个list并分组求和</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> mapply<span class="token punctuation">(</span>sum<span class="token punctuation">,</span> list<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> list<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>d<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span> a  b  c <span class="token number">11</span> <span class="token number">22</span> <span class="token number">33</span> </code></pre><ul><li>eg2-比较两个向量大小，按索引顺序取较大的值</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> a <span class="token operator">&lt;-</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">10</span><span class="token operator">></span> b <span class="token operator">&lt;-</span> <span class="token number">5</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token operator">></span> a <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span>  <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span><span class="token operator">></span> b <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">5</span>  <span class="token number">4</span>  <span class="token number">3</span>  <span class="token number">2</span>  <span class="token number">1</span>  <span class="token number">0</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token operator">-</span><span class="token number">3</span> <span class="token operator">-</span><span class="token number">4</span><span class="token operator">></span> mapply<span class="token punctuation">(</span>max<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">5</span>  <span class="token number">4</span>  <span class="token number">3</span>  <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span></code></pre><ul><li>eg3-输入向量，返回值多个时返回matrix</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> mapply<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> c<span class="token punctuation">(</span>x<span class="token operator">+</span>y<span class="token punctuation">,</span> x<span class="token operator">^</span>y<span class="token punctuation">,</span> x<span class="token operator">-</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">2</span>    <span class="token number">4</span>    <span class="token number">6</span>    <span class="token number">8</span>   <span class="token number">10</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">1</span>    <span class="token number">4</span>   <span class="token number">27</span>  <span class="token number">256</span> <span class="token number">3125</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">0</span>    <span class="token number">0</span>    <span class="token number">0</span>    <span class="token number">0</span>    <span class="token number">0</span></code></pre><hr><h3 id="eapply"><a href="#eapply" class="headerlink" title="eapply"></a>eapply</h3><p>eapply-函数定义：对一个环境空间中的所有变量进行遍历</p><pre class=" language-r"><code class="language-r">eapply<span class="token punctuation">(</span>env<span class="token punctuation">,</span> FUN<span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">,</span> all.names <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span> USE.NAMES <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>env: 环境空间<br>FUN：要使用的函数<br>all.names: 匹配类型, ANY为所有类型<br>USE.NAMES: 如果X为字符串，TRUE设置字符串为数据名，FALSE不设置</p></blockquote><ul><li>eg-eapply操作示例</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> <span class="token comment" spellcheck="true"># 定义一个环境空间</span><span class="token operator">></span> env <span class="token operator">&lt;-</span> new.env<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span> <span class="token comment" spellcheck="true"># 向这个环境空间中存入3个变量</span><span class="token operator">></span> env<span class="token operator">$</span>a <span class="token operator">&lt;-</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">10</span><span class="token operator">></span> env<span class="token operator">$</span>b <span class="token operator">&lt;-</span> exp<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">></span> env<span class="token operator">$</span>logic <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span> <span class="token boolean">FALSE</span><span class="token punctuation">,</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span><span class="token operator">></span> ls<span class="token punctuation">(</span>env<span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># 查看env空间中的变量</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"a"</span>     <span class="token string">"b"</span>     <span class="token string">"logic"</span><span class="token operator">></span> ls.str<span class="token punctuation">(</span>env<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 查看env空间中的变量字符串结构</span>a <span class="token operator">:</span>  int <span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">10</span>b <span class="token operator">:</span>  num <span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token number">0.0498</span> <span class="token number">0.1353</span> <span class="token number">0.3679</span> <span class="token number">1</span> <span class="token number">2.7183</span> <span class="token ellipsis">...</span>logic <span class="token operator">:</span>  logi <span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token boolean">TRUE</span> <span class="token boolean">FALSE</span> <span class="token boolean">FALSE</span> <span class="token boolean">TRUE</span><span class="token operator">></span> eapply<span class="token punctuation">(</span>env<span class="token punctuation">,</span> mean<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 计算env环境空间中所有变量的均值</span><span class="token operator">$</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">5.5</span><span class="token operator">$</span>b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">4.535125</span><span class="token operator">$</span>logic<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">0.5</span></code></pre><p><br></p><hr><h2 id="应用及拓展"><a href="#应用及拓展" class="headerlink" title="应用及拓展"></a>应用及拓展</h2><h3 id="应用展示"><a href="#应用展示" class="headerlink" title="应用展示"></a>应用展示</h3><p>原始数据为按年份year、地区loc和商品类别type进行统计的销售量。我们要制作两个销售总量的crosstable，一个以年份为行、地区为列，一个以年份为行，类别为列。</p><ul><li>应用1-tapply实现crosstable功能</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> df <span class="token operator">&lt;-</span> data.frame<span class="token punctuation">(</span>year<span class="token operator">=</span>kronecker<span class="token punctuation">(</span><span class="token number">2001</span><span class="token operator">:</span><span class="token number">2003</span><span class="token punctuation">,</span> rep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  loc<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">'beijing'</span><span class="token punctuation">,</span><span class="token string">'beijing'</span><span class="token punctuation">,</span><span class="token string">'shanghai'</span><span class="token punctuation">,</span><span class="token string">'shanghai'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  type<span class="token operator">=</span>rep<span class="token punctuation">(</span>c<span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sale<span class="token operator">=</span>rep<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> df   year      loc type sale<span class="token number">1</span>  <span class="token number">2001</span>  beijing    A    <span class="token number">1</span><span class="token number">2</span>  <span class="token number">2001</span>  beijing    B    <span class="token number">2</span><span class="token number">3</span>  <span class="token number">2001</span> shanghai    A    <span class="token number">3</span><span class="token number">4</span>  <span class="token number">2001</span> shanghai    B    <span class="token number">4</span><span class="token number">5</span>  <span class="token number">2002</span>  beijing    A    <span class="token number">5</span><span class="token number">6</span>  <span class="token number">2002</span>  beijing    B    <span class="token number">6</span><span class="token number">7</span>  <span class="token number">2002</span> shanghai    A    <span class="token number">7</span><span class="token number">8</span>  <span class="token number">2002</span> shanghai    B    <span class="token number">8</span><span class="token number">9</span>  <span class="token number">2003</span>  beijing    A    <span class="token number">9</span><span class="token number">10</span> <span class="token number">2003</span>  beijing    B   <span class="token number">10</span><span class="token number">11</span> <span class="token number">2003</span> shanghai    A   <span class="token number">11</span><span class="token number">12</span> <span class="token number">2003</span> shanghai    B   <span class="token number">12</span><span class="token operator">></span> tapply<span class="token punctuation">(</span>df<span class="token operator">$</span>sale<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token punctuation">,</span>c<span class="token punctuation">(</span><span class="token string">'year'</span><span class="token punctuation">,</span><span class="token string">'loc'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span>      locyear   beijing shanghai  <span class="token number">2001</span>       <span class="token number">3</span>        <span class="token number">7</span>  <span class="token number">2002</span>      <span class="token number">11</span>       <span class="token number">15</span>  <span class="token number">2003</span>      <span class="token number">19</span>       <span class="token number">23</span><span class="token operator">></span> tapply<span class="token punctuation">(</span>df<span class="token operator">$</span>sale<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token punctuation">,</span>c<span class="token punctuation">(</span><span class="token string">'year'</span><span class="token punctuation">,</span><span class="token string">'type'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span>      typeyear    A  B  <span class="token number">2001</span>  <span class="token number">4</span>  <span class="token number">6</span>  <span class="token number">2002</span> <span class="token number">12</span> <span class="token number">14</span>  <span class="token number">2003</span> <span class="token number">20</span> <span class="token number">22</span></code></pre><ul><li>应用2-mapply使两个嵌套列表对应项相加</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> list1 <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span> b<span class="token operator">=</span>list<span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token number">5</span><span class="token operator">:</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> list1<span class="token operator">$</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token operator">$</span>b<span class="token operator">$</span>b<span class="token operator">$</span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span class="token operator">$</span>b<span class="token operator">$</span>d<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span><span class="token operator">></span> list2 <span class="token operator">&lt;-</span> list<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span> b<span class="token operator">=</span>list<span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token number">5</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> list2<span class="token operator">$</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token operator">$</span>b<span class="token operator">$</span>b<span class="token operator">$</span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span><span class="token operator">$</span>b<span class="token operator">$</span>d<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token operator">></span> <span class="token string">"%+%"</span> <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> mapply<span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token operator">></span> mapply<span class="token punctuation">(</span><span class="token string">"%+%"</span><span class="token punctuation">,</span> list1<span class="token punctuation">,</span> list2<span class="token punctuation">)</span><span class="token operator">$</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">2</span>  <span class="token number">4</span>  <span class="token number">6</span>  <span class="token number">8</span> <span class="token number">10</span><span class="token operator">$</span>b<span class="token operator">$</span>b<span class="token operator">$</span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">6</span>  <span class="token number">8</span> <span class="token number">10</span> <span class="token number">12</span><span class="token operator">$</span>b<span class="token operator">$</span>d<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">6</span>  <span class="token number">8</span> <span class="token number">10</span> <span class="token number">12</span> <span class="token number">14</span></code></pre><hr><h3 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h3><h4 id="by"><a href="#by" class="headerlink" title="by"></a>by</h4><p>by-函数定义：by可以当成data.frame上的tapply，在数据框行上施用索引分组运算</p><pre class=" language-r"><code class="language-r">by<span class="token punctuation">(</span>data<span class="token punctuation">,</span> INDICES<span class="token punctuation">,</span> FUN<span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">,</span> simplify <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>data: 数据框<br>INDICES：与数据框行数等长的用于分组的索引<br>FUN：要使用的函数</p></blockquote><ul><li>eg-by对数据框进行按行索引分组计算</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> data <span class="token operator">&lt;-</span> data.frame<span class="token punctuation">(</span>a<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> data  a  b<span class="token number">1</span> <span class="token number">1</span>  <span class="token number">6</span><span class="token number">2</span> <span class="token number">2</span>  <span class="token number">7</span><span class="token number">3</span> <span class="token number">3</span>  <span class="token number">8</span><span class="token number">4</span> <span class="token number">4</span>  <span class="token number">9</span><span class="token number">5</span> <span class="token number">5</span> <span class="token number">10</span><span class="token operator">></span> INDICES <span class="token operator">&lt;-</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">></span> by<span class="token punctuation">(</span>data<span class="token punctuation">,</span> INDICES<span class="token punctuation">,</span> colMeans<span class="token punctuation">)</span>INDICES<span class="token operator">:</span> <span class="token number">1</span>  a   b <span class="token number">1.5</span> <span class="token number">6.5</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>INDICES<span class="token operator">:</span> <span class="token number">2</span>a b <span class="token number">4</span> <span class="token number">9</span> <span class="token operator">></span> by<span class="token punctuation">(</span>data<span class="token punctuation">,</span> INDICES<span class="token punctuation">,</span> rowMeans<span class="token punctuation">)</span>INDICES<span class="token operator">:</span> <span class="token number">1</span>  <span class="token number">1</span>   <span class="token number">2</span> <span class="token number">3.5</span> <span class="token number">4.5</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>INDICES<span class="token operator">:</span> <span class="token number">2</span>  <span class="token number">3</span>   <span class="token number">4</span>   <span class="token number">5</span> <span class="token number">5.5</span> <span class="token number">6.5</span> <span class="token number">7.5</span> </code></pre><h4 id="outer"><a href="#outer" class="headerlink" title="outer"></a>outer</h4><p>outer-函数定义：作用于数组的类似于矩阵外积运算方式的运算函数</p><pre class=" language-r"><code class="language-r">outer<span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> FUN <span class="token operator">=</span> <span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>X、Y: 向量、数组<br>FUN：当为空时即为外积运算，否则为将FUN代替外积运算符进行类似外积的运算操作</p></blockquote><ul><li>eg-outer的使用</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> x <span class="token operator">&lt;-</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">;</span> y <span class="token operator">&lt;-</span> <span class="token number">2</span><span class="token operator">:</span><span class="token number">4</span><span class="token operator">></span> x<span class="token punctuation">;</span> y<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span class="token operator">></span> outer<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">2</span>    <span class="token number">3</span>    <span class="token number">4</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">4</span>    <span class="token number">6</span>    <span class="token number">8</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">6</span>    <span class="token number">9</span>   <span class="token number">12</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">8</span>   <span class="token number">12</span>   <span class="token number">16</span><span class="token operator">></span> month.abb <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string">"Jan"</span> <span class="token string">"Feb"</span> <span class="token string">"Mar"</span> <span class="token string">"Apr"</span> <span class="token string">"May"</span> <span class="token string">"Jun"</span> <span class="token string">"Jul"</span> <span class="token string">"Aug"</span> <span class="token string">"Sep"</span> <span class="token string">"Oct"</span> <span class="token string">"Nov"</span> <span class="token string">"Dec"</span><span class="token operator">></span> outer<span class="token punctuation">(</span>month.abb<span class="token punctuation">,</span> <span class="token number">1999</span><span class="token operator">:</span><span class="token number">2003</span><span class="token punctuation">,</span> FUN <span class="token operator">=</span> <span class="token string">"paste"</span><span class="token punctuation">)</span>      <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>       <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>       <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>       <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>       <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>       <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token string">"Jan 1999"</span> <span class="token string">"Jan 2000"</span> <span class="token string">"Jan 2001"</span> <span class="token string">"Jan 2002"</span> <span class="token string">"Jan 2003"</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token string">"Feb 1999"</span> <span class="token string">"Feb 2000"</span> <span class="token string">"Feb 2001"</span> <span class="token string">"Feb 2002"</span> <span class="token string">"Feb 2003"</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token string">"Mar 1999"</span> <span class="token string">"Mar 2000"</span> <span class="token string">"Mar 2001"</span> <span class="token string">"Mar 2002"</span> <span class="token string">"Mar 2003"</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token string">"Apr 1999"</span> <span class="token string">"Apr 2000"</span> <span class="token string">"Apr 2001"</span> <span class="token string">"Apr 2002"</span> <span class="token string">"Apr 2003"</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token string">"May 1999"</span> <span class="token string">"May 2000"</span> <span class="token string">"May 2001"</span> <span class="token string">"May 2002"</span> <span class="token string">"May 2003"</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token string">"Jun 1999"</span> <span class="token string">"Jun 2000"</span> <span class="token string">"Jun 2001"</span> <span class="token string">"Jun 2002"</span> <span class="token string">"Jun 2003"</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token string">"Jul 1999"</span> <span class="token string">"Jul 2000"</span> <span class="token string">"Jul 2001"</span> <span class="token string">"Jul 2002"</span> <span class="token string">"Jul 2003"</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token string">"Aug 1999"</span> <span class="token string">"Aug 2000"</span> <span class="token string">"Aug 2001"</span> <span class="token string">"Aug 2002"</span> <span class="token string">"Aug 2003"</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token string">"Sep 1999"</span> <span class="token string">"Sep 2000"</span> <span class="token string">"Sep 2001"</span> <span class="token string">"Sep 2002"</span> <span class="token string">"Sep 2003"</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token string">"Oct 1999"</span> <span class="token string">"Oct 2000"</span> <span class="token string">"Oct 2001"</span> <span class="token string">"Oct 2002"</span> <span class="token string">"Oct 2003"</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token string">"Nov 1999"</span> <span class="token string">"Nov 2000"</span> <span class="token string">"Nov 2001"</span> <span class="token string">"Nov 2002"</span> <span class="token string">"Nov 2003"</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token string">"Dec 1999"</span> <span class="token string">"Dec 2000"</span> <span class="token string">"Dec 2001"</span> <span class="token string">"Dec 2002"</span> <span class="token string">"Dec 2003"</span></code></pre><hr><h4 id="sweep"><a href="#sweep" class="headerlink" title="sweep"></a>sweep</h4><p>sweep-函数定义：对数组、矩阵按维度进行运算</p><pre class=" language-r"><code class="language-r">sweep<span class="token punctuation">(</span>x<span class="token punctuation">,</span> MARGIN<span class="token punctuation">,</span> STATS<span class="token punctuation">,</span> FUN <span class="token operator">=</span> <span class="token string">"-"</span><span class="token punctuation">,</span> check.margin <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>x: 数组、矩阵<br>MARGIN：运算维度，1表示行，2表示列，3即第三维度，以此类推<br>STATS：运算参数，类似于减法中的减数，除法中的除数<br>FUN：要使用的函数</p></blockquote><ul><li>eg1-对数组按行运算</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> mat <span class="token operator">&lt;-</span> matrix<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">></span> mat     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">1</span>    <span class="token number">4</span>    <span class="token number">7</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">2</span>    <span class="token number">5</span>    <span class="token number">8</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">3</span>    <span class="token number">6</span>    <span class="token number">9</span><span class="token operator">></span> sweep<span class="token punctuation">(</span>mat<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> c<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"+"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 第一行都加1，第二行都加4，第三行都加7</span>     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">2</span>    <span class="token number">5</span>    <span class="token number">8</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">6</span>    <span class="token number">9</span>   <span class="token number">12</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span>   <span class="token number">10</span>   <span class="token number">13</span>   <span class="token number">16</span></code></pre><ul><li>eg2-STATS可为其他格式，但注意与取MARGIN后的X结构相符</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> A <span class="token operator">&lt;-</span> array<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">24</span><span class="token punctuation">,</span> dim <span class="token operator">=</span> <span class="token number">4</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">></span> median <span class="token operator">&lt;-</span> apply<span class="token punctuation">(</span>A<span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> median<span class="token punctuation">)</span><span class="token operator">></span> A<span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token number">1</span>     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">1</span>    <span class="token number">5</span>    <span class="token number">9</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">2</span>    <span class="token number">6</span>   <span class="token number">10</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">3</span>    <span class="token number">7</span>   <span class="token number">11</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">4</span>    <span class="token number">8</span>   <span class="token number">12</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token number">2</span>     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>   <span class="token number">13</span>   <span class="token number">17</span>   <span class="token number">21</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>   <span class="token number">14</span>   <span class="token number">18</span>   <span class="token number">22</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span>   <span class="token number">15</span>   <span class="token number">19</span>   <span class="token number">23</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">]</span>   <span class="token number">16</span>   <span class="token number">20</span>   <span class="token number">24</span><span class="token operator">></span> median     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">7</span>   <span class="token number">11</span>   <span class="token number">15</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">8</span>   <span class="token number">12</span>   <span class="token number">16</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">9</span>   <span class="token number">13</span>   <span class="token number">17</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">]</span>   <span class="token number">10</span>   <span class="token number">14</span>   <span class="token number">18</span><span class="token operator">></span> sweep<span class="token punctuation">(</span>A<span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> median<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token number">1</span>     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>   <span class="token operator">-</span><span class="token number">6</span>   <span class="token operator">-</span><span class="token number">6</span>   <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>   <span class="token operator">-</span><span class="token number">6</span>   <span class="token operator">-</span><span class="token number">6</span>   <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span>   <span class="token operator">-</span><span class="token number">6</span>   <span class="token operator">-</span><span class="token number">6</span>   <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">]</span>   <span class="token operator">-</span><span class="token number">6</span>   <span class="token operator">-</span><span class="token number">6</span>   <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token number">2</span>     <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">6</span>    <span class="token number">6</span>    <span class="token number">6</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">6</span>    <span class="token number">6</span>    <span class="token number">6</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">6</span>    <span class="token number">6</span>    <span class="token number">6</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">]</span>    <span class="token number">6</span>    <span class="token number">6</span>    <span class="token number">6</span></code></pre><hr><h4 id="replicate"><a href="#replicate" class="headerlink" title="replicate"></a>replicate</h4><p>replicate-函数定义：rep能把输入参数重复数次，replicate则能调用表达式数次</p><pre class=" language-r"><code class="language-r">replicate<span class="token punctuation">(</span>n<span class="token punctuation">,</span> expr<span class="token punctuation">,</span> simplify <span class="token operator">=</span> <span class="token string">"array"</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>n: 调用的次数<br>expr：调用的表达式</p></blockquote><ul><li>eg-建立一个函数，模拟扔两个骰子的点数之和，然后重复运行10次</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> game <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">+</span>   n <span class="token operator">&lt;-</span> sample<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>replace<span class="token operator">=</span>T<span class="token punctuation">)</span><span class="token operator">+</span>   return<span class="token punctuation">(</span>sum<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token punctuation">}</span><span class="token operator">></span> replicate<span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> game<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token number">6</span>  <span class="token number">6</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">7</span>  <span class="token number">7</span> <span class="token number">11</span>  <span class="token number">8</span>  <span class="token number">7</span>  <span class="token number">9</span></code></pre><hr><h4 id="aggregate"><a href="#aggregate" class="headerlink" title="aggregate"></a>aggregate</h4><p>aggregate-函数定义：可按要求把数据分组，然后对分组后的数据进行各种操作</p><pre class=" language-r"><code class="language-r">aggregate<span class="token punctuation">(</span>x<span class="token punctuation">,</span> by<span class="token punctuation">,</span> FUN<span class="token punctuation">,</span> <span class="token ellipsis">...</span><span class="token punctuation">)</span></code></pre><blockquote><p><strong>参数列表：</strong><br>x: 一种R数据结构，通常为数据框<br>by：分组索引，必须为list格式<br>FUN：要使用的函数</p></blockquote><ul><li>eg-按性别分组查看年龄和身高的均值</li></ul><pre class=" language-r"><code class="language-r"><span class="token operator">></span> data <span class="token operator">&lt;-</span> data.frame<span class="token punctuation">(</span>name<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">,</span><span class="token string">"赵六"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>              sex<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token string">"M"</span><span class="token punctuation">,</span><span class="token string">"M"</span><span class="token punctuation">,</span><span class="token string">"F"</span><span class="token punctuation">,</span><span class="token string">"F"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> age<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">+</span>              height<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">166</span><span class="token punctuation">,</span><span class="token number">170</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">155</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span> data  name sex age height<span class="token number">1</span> 张三   M  <span class="token number">20</span>    <span class="token number">166</span><span class="token number">2</span> 李四   M  <span class="token number">40</span>    <span class="token number">170</span><span class="token number">3</span> 王五   F  <span class="token number">22</span>    <span class="token number">150</span><span class="token number">4</span> 赵六   F  <span class="token number">30</span>    <span class="token number">155</span><span class="token operator">></span> aggregate<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> by<span class="token operator">=</span>list<span class="token punctuation">(</span>data<span class="token operator">$</span>sex<span class="token punctuation">)</span><span class="token punctuation">,</span> mean<span class="token punctuation">)</span>  Group<span class="token number">.1</span> age height<span class="token number">1</span>       F  <span class="token number">26</span>  <span class="token number">152.5</span><span class="token number">2</span>       M  <span class="token number">30</span>  <span class="token number">168.0</span></code></pre><p><br></p><hr><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><blockquote><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://www.cnblogs.com/aquastone/p/r-apply.html" target="_blank" rel="noopener">R语言apply函数族笔记</a></li><li><a href="http://blog.fens.me/r-apply/" target="_blank" rel="noopener">掌握R语言中的apply函数族</a></li><li><a href="https://feng.li/" target="_blank" rel="noopener">Dr. Feng Li-Personal Site</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> apply </tag>
            
            <tag> 数据操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客文章写作样式</title>
      <link href="/2018/01/27/bo-ke-wen-zhang-xie-zuo-yang-shi/"/>
      <url>/2018/01/27/bo-ke-wen-zhang-xie-zuo-yang-shi/</url>
      
        <content type="html"><![CDATA[<p>学习了新知识，疏于记录便会淡忘，要用到时方悔当初；纸本与现有平台有其局限性，对于技术文档的展示有颇多限制，个人博客不失为一个好的选择——源于记录，善于书页。</p><blockquote><p>注：本文基于本网站的初代版本 —— NEXT 主题，部分内容与本网站当前主题略有不符。</p></blockquote><!--网易云音乐链接--><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="320" src="//music.163.com/outchain/player?type=0&id=2058497430&auto=0&height=430"></iframe><h2 id="使用文章模板"><a href="#使用文章模板" class="headerlink" title="使用文章模板"></a>使用文章模板</h2><h3 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">></span></code></pre><p>有关创建新文章的命令以及默认文件名等说明在<a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">官方文档</a>里说的已经很清楚了，在此不再赘述。</p><h3 id="文章模板文件"><a href="#文章模板文件" class="headerlink" title="文章模板文件"></a>文章模板文件</h3><h4 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h4><p>关于文件最上方的参数，参见 Hexo 官方文档的 <a href="https://hexo.io/docs/front-matter.html" target="_blank" rel="noopener">Front-matter</a> 和 <a href="https://hexo.io/zh-cn/docs/variables.html#%E9%A1%B5%E9%9D%A2%E5%8F%98%E9%87%8F" target="_blank" rel="noopener">页面变量</a>，以下是本人常用的 ：</p><pre><code>/* ！！！！！！！！！！** 每一项的 : 后面均有一个空格** 且 : 为英文符号** ！！！！！！！！！！*/title:/* 文章标题，可以为中文 */date:/* 建立日期，如果自己手动添加，请按固定格式** 就算不写，页面每篇文章顶部的发表于……也能显示** 只要在主题配置文件中，配置了 created_at 就行** 那为什么还要自己加上？** 自定义文章发布的时间*/updated:/* 更新日期，其它与上面的建立日期类似** 不过在页面每篇文章顶部，是更新于……** 在主题配置文件中，是 updated_at*/categories:/* 分类，支持多级，比如：- technology- computer- computer-aided-art则为technology/computer/computer-aided-art（不适用于 layout: page）*/tags:/* 标签** 多个可以这样写[标签1,标签2,标签3]** （不适用于 layout: page）*/description:/* 文章的描述，在每篇文章标题下方显示** 并且作为网页的 description 元数据** 如果不写，则自动取 &lt;!-- more --&gt;** 之前的文字作为网页的 description 元数据*/keywords:/* 关键字，并且作为网页的 keywords 元数据** 如果不写，则自动取 tags 里的项** 作为网页的 keywords 元数据*/comments:/* 是否开启评论** 默认值是 true** 要关闭写 false*/layout:/* 页面布局，默认值是 post，默认值可以在** 站点配置文件中修改 default_layout** 另：404 页面可能用到，将其值改为 false*/sticky:/* 文章置顶** 此项只有参考教程配置好，否则请勿添加！*/password:/* 文章密码，此项只有参考教程：** http://shenzekun.cn/hexo的next主题个性化配置教程.html** 第 24 节，配置好，否则请勿添加！** 发现还是有 bug 的，就是右键在新标签中打开** 然后无论是否输入密码，都能看到内容*/</code></pre><h4 id="我的模板文件"><a href="#我的模板文件" class="headerlink" title="我的模板文件"></a>我的模板文件</h4><pre class=" language-md"><code class="language-md">---title: {{ title }}date: {{ date }}categories: tags: copyright: password: ---<br>![](http://p31gihke0.bkt.clouddn.com/)<!--more-->## ------## ------##------## 致谢> ### 参考文章> * []()</code></pre><ol><li><code>&lt;!--more--&gt;</code>以上属于文章的摘要（封面），会在主页显示出来，可以看到本人文章的封面一般是一段居中倾斜文字配上一张图。</li><li>文章内标题请从二级标题（##）开始！</li></ol><blockquote><p>Ps：此处虽然给了模板，但其实博客的写作很随性的，你可以自主搭配样式，怎么舒服怎么来，下面就来介绍一下该怎样写一篇博文以及如何增添样式来使文章逻辑分明，便于阅读与理解。（宝宝们放心，看懂了后写起来比Word省心多了）</p></blockquote><hr><h2 id="使用-Markdown"><a href="#使用-Markdown" class="headerlink" title="使用 Markdown"></a>使用 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，我们可以使用它：</p><blockquote><ul><li>整理知识，学习笔记</li><li>发布日记，杂文，所见所想</li><li>撰写发布技术文稿（代码支持）</li><li>撰写发布学术论文（LaTeX 公式支持）</li></ul></blockquote><p>它的优点在于：</p><blockquote><ul><li>专注你的文字内容而不是排版样式</li><li>可读，直观。适合所有人的写作语言</li><li>轻松的导出 HTML、PDF 和本身的 .md 文件</li><li>纯文本内容，兼容所有的文本编辑器与字处理软件</li></ul></blockquote><h3 id="GFM-简明语法"><a href="#GFM-简明语法" class="headerlink" title="GFM 简明语法"></a>GFM 简明语法</h3><p>网络上关于Markdown的语法说明有很多，大家可以去网上随便找一篇读一读了解个大概。在不同平台上也衍生出了多样化的独具特色的Markdown语法，它们大同小异但也确实各有不同，下面的这篇文章简单介绍了Hexo下使用的MarkDown——Github的GFM的基本语法与标准：</p><p><a href="http://suo.im/2Ch7H3" target="_blank" rel="noopener">HEXO下的Markdown语法——GFM写博客</a></p><h3 id="Markdown-高级语法"><a href="#Markdown-高级语法" class="headerlink" title="Markdown 高级语法"></a>Markdown 高级语法</h3><p>能用Markdown 做的事情还有很多，列表、代码块、图表这些都不是问题：</p><ul><li>制作一份待办事宜 [Todo 列表]</li></ul><ul><li style="list-style: none"><input type="checkbox"> 支持以 PDF 格式导出文稿</li><li style="list-style: none"><input type="checkbox"> 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li><li style="list-style: none"><input type="checkbox" checked> 新增 Todo 列表功能</li><li style="list-style: none"><input type="checkbox" checked> 修复 LaTex 公式渲染问题</li><li style="list-style: none"><input type="checkbox" checked> 新增 LaTex 公式编号功能</li></ul><ul><li>高亮一段代码</li></ul><pre class=" language-python"><code class="language-python">@requires_authorization<span class="token keyword">class</span> <span class="token class-name">SomeClass</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># A comment</span>    <span class="token keyword">print</span> <span class="token string">'hello world'</span></code></pre><ul><li>绘制表格</li></ul><table><thead><tr><th>项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td>计算机</td><td style="text-align:right">$1600</td><td style="text-align:center">5</td></tr><tr><td>手机</td><td style="text-align:right">$12</td><td style="text-align:center">12</td></tr><tr><td>管线</td><td style="text-align:right">$1</td><td style="text-align:center">234</td></tr></tbody></table><blockquote><p>更多更详细的Markdown语法使用教程见：<a href="http://suo.im/3Q8rcF" target="_blank" rel="noopener">Cmd Markdown 语法手册</a></p></blockquote><h3 id="与其他语言相兼容"><a href="#与其他语言相兼容" class="headerlink" title="与其他语言相兼容"></a>与其他语言相兼容</h3><p>在 Markdown 书写的过程中，不仅可以使用简明的 Markdown 语法，还可以通过使用 LaTex 语法来书写数学公式，使用HTML 语法来调整布局与颜色等。但是本人在实践中发现，GFM 对 HTML 语法的兼容性非常好，因为最终它就是转为 html 格式发布的，但是对于 LaTex 语法的书写发布渲染有时会出现一些奇怪的问题，建议如果写学术文章还是选择更加合适的 Markdown 平台，毕竟 GFM 在此只是用来写博客的。</p><h4 id="LaTex-语法"><a href="#LaTex-语法" class="headerlink" title="LaTex 语法"></a>LaTex 语法</h4><p>在<code>Markdown</code>语体下使用<code>LaTex</code>语法一般来将目的很单纯，就是美化数学公式的书写，主要有两种用法。</p><ul><li>行内公式书写</li></ul><pre class=" language-c"><code class="language-c">$E<span class="token operator">=</span>mc<span class="token operator">^</span><span class="token number">2</span>$</code></pre><p>质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</p><ul><li>行间公式书写：</li></ul><pre class=" language-c"><code class="language-c">$$\sum_<span class="token punctuation">{</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token operator">^</span>n a_i<span class="token operator">=</span><span class="token number">0</span>$$$$<span class="token function">f</span><span class="token punctuation">(</span>x_1<span class="token punctuation">,</span>x_x<span class="token punctuation">,</span>\ldots<span class="token punctuation">,</span>x_n<span class="token punctuation">)</span> <span class="token operator">=</span> x_1<span class="token operator">^</span><span class="token number">2</span> <span class="token operator">+</span> x_2<span class="token operator">^</span><span class="token number">2</span> <span class="token operator">+</span> \cdots <span class="token operator">+</span> x_n<span class="token operator">^</span><span class="token number">2</span> $$</code></pre><p>$$\sum_{i=1}^n a_i=0$$</p><p>$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</p><blockquote><p>什么？不熟悉 LaTex 语法，不用害怕，试试这个 <a href="http://www.codecogs.com/latex/eqneditor.php" target="_blank" rel="noopener">在线LaTex公式编辑器</a></p></blockquote><h4 id="HTML-与-CSS-语法"><a href="#HTML-与-CSS-语法" class="headerlink" title="HTML 与 CSS 语法"></a>HTML 与 CSS 语法</h4><p>熟悉语法的同志们可以尽情发挥，如果你不熟悉也没关系，记住以下这几种常用的也够用了。</p><ul><li>分隔线和空行</li></ul><pre class=" language-html"><code class="language-html">/* 分隔线 */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/></span></span>/* 注意事项 6：在XHTML 中，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span> 必须被正确地关闭，比如 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/></span></span> *//* 空行 */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>/* 注意事项同上 */</code></pre><ul><li>居中和对齐方式</li></ul><pre class=" language-html"><code class="language-html">/* 居中 */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">></span></span>内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span>/* 右对齐 */<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">text-align</span><span class="token punctuation">:</span>right</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><ul><li>字体大小和颜色</li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#xxxxxx<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span>/* 详细请查看 http://www.w3school.com.cn/tags/tag_font.asp */</code></pre><center><font color="red" size="number">例：我是居中的小红</font></center><hr><h2 id="插入音乐和视频"><a href="#插入音乐和视频" class="headerlink" title="插入音乐和视频"></a>插入音乐和视频</h2><h3 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h3><p>可以直接用 HTML 的标签，写法如下：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://什么什么什么.mp3<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">max-height</span> <span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span> <span class="token property">margin-left</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span> <span class="token property">margin-right</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span> <span class="token attr-name">loop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loop<span class="token punctuation">"</span></span> <span class="token attr-name">preload</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>meta<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Your browser does not support the audio tag.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span></code></pre><p>如果想直接用已有平台上的歌，事情也很好办，可以将歌曲外链嵌入页面，以云村为例：<br>打开<a href="https://music.163.com/" target="_blank" rel="noopener">网易云音乐</a>找到自己喜欢的音乐或个点，点击生成外链：<br><img src="https://blog-1255524710.cos.ap-beijing.myqcloud.com/images/网易云音乐.png" alt="网易云音乐"><br>然后根据自己的需要，加在<code>blog/theme/next/layout/_layout.swig</code>中或<code>blog/theme/next/layout/_macro/sidebar.swig</code>中，当然也可以直接放在文章中，比如用以下外链生成的效果见本文顶部。</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--网易云音乐链接--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">marginwidth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">marginheight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span>330</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span>320</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//music.163.com/outchain/player?type<span class="token punctuation">=</span>0&amp;id<span class="token punctuation">=</span>2058497430&amp;auto<span class="token punctuation">=</span>0&amp;height<span class="token punctuation">=</span>430<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span></code></pre><p>如果你还想要加上歌词就需要安装一个插件<code>Aplayer</code>，在<a href="http://suo.im/2sHCA0" target="_blank" rel="noopener">这篇文章</a>里有详细说明。由于我没有这种需求就不再赘述了。</p><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><p>一样的，可以直接用 HTML 的标签，写法如下：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">poster</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://封面图.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://什么什么什么.mp4<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">max-height</span> <span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span> <span class="token property">margin-left</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span> <span class="token property">margin-right</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span> <span class="token attr-name">loop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loop<span class="token punctuation">"</span></span> <span class="token attr-name">preload</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>meta<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Your browser does not support the video tag.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span></code></pre><p>当然还可以用插件完成更多的功能，上面那篇文章里也有介绍，想更进一步的可以去看看。</p><hr><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>刚建博客的前两天，看了好多博主的博客，感叹各位博主的创造力与审美，同时也偷偷模仿了几位博主的博客样式，虽说学的有些不伦不类，不过大概也不会有大的改动了，毕竟建博客的初衷是为了记录，版式的设计为的是营造舒心方便的创作环境。</p><p>接下来就要认真考虑写什么、怎么写的问题，于是就有了本篇博文的诞生，由于以前有使用 Rmarkdown 的经历，所以学起来倒也省了许多气力，目前来看上面的写作样式已经足以让我尽情展现了，在此特别感谢无私整合资源的各位博主们，接下来的日子里就是真正输出内容的时候了，会涉及R和Python的学习心得以及自己做的数据报告，还会有Kaggle的大神代码解析或其他的一些有的没的，要不要考虑加个书单页和观影页嗯？<br>总之，明天又是美好的一天，加油！</p><blockquote><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://qianling.pw/style/#TOC%E6%95%B0%E5%AD%97%E5%9D%97" target="_blank" rel="noopener">外部样式表汇总</a></li><li><a href="https://almostover.ru/2016-01/hexo-theme-next-test/" target="_blank" rel="noopener">Hexo Theme Next Test</a></li><li><a href="http://suo.im/1sH1k7" target="_blank" rel="noopener">Markdown - 简单的世界</a></li><li><a href="http://suo.im/3Q8rcF" target="_blank" rel="noopener">Cmd Markdown 语法手册</a></li><li><a href="http://suo.im/qRryw" target="_blank" rel="noopener">HEXO下的语法高亮拓展修改</a></li><li><a href="http://www.divcss5.com/rumen/r3.shtml" target="_blank" rel="noopener">CSS中的class与id区别及用法</a></li><li><a href="http://suo.im/2Ch7H3" target="_blank" rel="noopener">HEXO下的Markdown语法(GFM)写博客</a></li><li><a href="http://suo.im/2sHCA0" target="_blank" rel="noopener">打造个性超赞博客Hexo+NexT+GithubPages的超深度优化</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 排版 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cmd Markdown 使用说明</title>
      <link href="/2018/01/23/cmd-markdown-shi-yong-shuo-ming/"/>
      <url>/2018/01/23/cmd-markdown-shi-yong-shuo-ming/</url>
      
        <content type="html"><![CDATA[<p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，Cmd Markdown 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 </p><p>您可以使用 Cmd Markdown：</p><blockquote><ul><li>整理知识，学习笔记</li><li>发布日记，杂文，所见所想</li><li>撰写发布技术文稿（代码支持）</li><li>撰写发布学术论文（LaTeX 公式支持）</li></ul></blockquote><p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p><h3 id="Windows-Mac-Linux-全平台客户端"><a href="#Windows-Mac-Linux-全平台客户端" class="headerlink" title="Windows/Mac/Linux 全平台客户端"></a><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="noopener">Windows/Mac/Linux 全平台客户端</a></h3><blockquote><p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class="icon-file"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p></blockquote><hr><h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p><h3 id="1-制作一份待办事宜-Todo-列表"><a href="#1-制作一份待办事宜-Todo-列表" class="headerlink" title="1. 制作一份待办事宜 Todo 列表"></a>1. 制作一份待办事宜 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表" target="_blank" rel="noopener">Todo 列表</a></h3><ul><li style="list-style: none"><input type="checkbox"> 支持以 PDF 格式导出文稿</li><li style="list-style: none"><input type="checkbox"> 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li><li style="list-style: none"><input type="checkbox" checked> 新增 Todo 列表功能</li><li style="list-style: none"><input type="checkbox" checked> 修复 LaTex 公式渲染问题</li><li style="list-style: none"><input type="checkbox" checked> 新增 LaTex 公式编号功能</li></ul><h3 id="2-书写一个质能守恒公式-LaTeX"><a href="#2-书写一个质能守恒公式-LaTeX" class="headerlink" title="2. 书写一个质能守恒公式[^LaTeX]"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E=mc^2$$</p><h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><pre class=" language-python"><code class="language-python">@requires_authorization<span class="token keyword">class</span> <span class="token class-name">SomeClass</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># A comment</span>    <span class="token keyword">print</span> <span class="token string">'hello world'</span></code></pre><h3 id="4-高效绘制-流程图"><a href="#4-高效绘制-流程图" class="headerlink" title="4. 高效绘制 流程图"></a>4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图" target="_blank" rel="noopener">流程图</a></h3><pre class=" language-flow"><code class="language-flow">st=>start: Startop=>operation: Your Operationcond=>condition: Yes or No?e=>endst->op->condcond(yes)->econd(no)->op</code></pre><h3 id="5-高效绘制-序列图"><a href="#5-高效绘制-序列图" class="headerlink" title="5. 高效绘制 序列图"></a>5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图" target="_blank" rel="noopener">序列图</a></h3><pre class=" language-seq"><code class="language-seq">Alice->Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob-->Alice: I am good thanks!</code></pre><h3 id="6-高效绘制-甘特图"><a href="#6-高效绘制-甘特图" class="headerlink" title="6. 高效绘制 甘特图"></a>6. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图" target="_blank" rel="noopener">甘特图</a></h3><pre class=" language-gantt"><code class="language-gantt">    title 项目开发流程    section 项目确定        需求分析       :a1, 2016-06-22, 3d        可行性报告     :after a1, 5d        概念验证       : 5d    section 项目实施        概要设计      :2016-07-05  , 5d        详细设计      :2016-07-08, 10d        编码          :2016-07-15, 10d        测试          :2016-07-22, 5d    section 发布验收        发布: 2d        验收: 3d</code></pre><h3 id="7-绘制表格"><a href="#7-绘制表格" class="headerlink" title="7. 绘制表格"></a>7. 绘制表格</h3><table><thead><tr><th>项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td>计算机</td><td style="text-align:right">\$1600</td><td style="text-align:center">5</td></tr><tr><td>手机</td><td style="text-align:right">\$12</td><td style="text-align:center">12</td></tr><tr><td>管线</td><td style="text-align:right">\$1</td><td style="text-align:center">234</td></tr></tbody></table><h3 id="8-更详细语法说明"><a href="#8-更详细语法说明" class="headerlink" title="8. 更详细语法说明"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="noopener">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册" target="_blank" rel="noopener">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p><p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p><hr><h2 id="什么是-Cmd-Markdown"><a href="#什么是-Cmd-Markdown" class="headerlink" title="什么是 Cmd Markdown"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p><h3 id="1-实时同步预览"><a href="#1-实时同步预览" class="headerlink" title="1. 实时同步预览"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p><h3 id="2-编辑工具栏"><a href="#2-编辑工具栏" class="headerlink" title="2. 编辑工具栏"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p><p><img src="https://www.zybuluo.com/static/img/toolbar-editor.png" alt="tool-editor"></p><h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3. 编辑模式"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p><h3 id="4-实时的云端文稿"><a href="#4-实时的云端文稿" class="headerlink" title="4. 实时的云端文稿"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p><h3 id="5-离线模式"><a href="#5-离线模式" class="headerlink" title="5. 离线模式"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p><h3 id="6-管理工具栏"><a href="#6-管理工具栏" class="headerlink" title="6. 管理工具栏"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p><p><img src="https://www.zybuluo.com/static/img/toolbar-manager.jpg" alt="tool-manager"></p><p>通过管理工具栏可以：</p><p><i class="icon-share"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class="icon-file"></i> 新建：开始撰写一篇新的文稿<br><i class="icon-trash"></i> 删除：删除当前的文稿<br><i class="icon-cloud"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class="icon-reorder"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class="icon-pencil"></i> 模式：切换 普通/Vim/Emacs 编辑模式</p><h3 id="7-阅读工具栏"><a href="#7-阅读工具栏" class="headerlink" title="7. 阅读工具栏"></a>7. 阅读工具栏</h3><p><img src="https://www.zybuluo.com/static/img/toolbar-reader.jpg" alt="tool-manager"></p><p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p><p>工具栏上的五个图标依次为：</p><p><i class="icon-list"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class="icon-chevron-sign-left"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class="icon-adjust"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class="icon-desktop"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class="icon-fullscreen"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p><h3 id="8-阅读模式"><a href="#8-阅读模式" class="headerlink" title="8. 阅读模式"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class="icon-desktop"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p><h3 id="9-标签、分类和搜索"><a href="#9-标签、分类和搜索" class="headerlink" title="9. 标签、分类和搜索"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p><p>标签： 未分类</p><p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p><p><img src="https://www.zybuluo.com/static/img/file-list.png" alt="file-list"></p><h3 id="10-文稿发布和分享"><a href="#10-文稿发布和分享" class="headerlink" title="10. 文稿发布和分享"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p><hr><p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class="icon-file"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p><p>作者 <a href="http://weibo.com/ghosert" target="_blank" rel="noopener">@ghosert</a><br>2016 年 07月 07日    </p><p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 参考更多使用方法。</p><p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>]]></content>
      
      
      <categories>
          
          <category> 软件推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cmd-Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
